Prefix(:=<http://www.semanticweb.org/vedurm01/ontologies/2021/3/qod#>)
Prefix(WV:=<http://www.wurvoc.org/vocabularies/WV/>)
Prefix(dc:=<http://purl.org/dc/elements/1.1/>)
Prefix(ns:=<http://creativecommons.org/ns#>)
Prefix(dsi:=<http://www.example.com/ns/dsi#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(bibo:=<http://purl.org/ontology/bibo/>)
Prefix(foaf:=<http://xmlns.com/foaf/0.1/>)
Prefix(om-2:=<http://www.ontology-of-units-of-measure.org/resource/om-2/>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(scal:=<http://www.example.com/ns/scal#>)
Prefix(skos:=<http://www.w3.org/2004/02/skos/core#>)
Prefix(sosa:=<http://www.w3.org/ns/sosa/>)
Prefix(vann:=<http://purl.org/vocab/vann/>)
Prefix(terms:=<http://purl.org/dc/terms/>)
Prefix(trans:=<https://github.com/PTB-M4D/QoD/raw/main/trans.ttl>)
Prefix(schema:=<http://schema.org/>)
Prefix(mathematics:=<https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn>)


Ontology(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/qod.ttl>
Import(<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Import(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#>)
Import(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl>)
Import(<http://www.w3.org/ns/ssn/systems/>)
Import(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl>)
Annotation(dc:date "2021/09/08")
Annotation(terms:created "2017-05-14"^^xsd:date)
Annotation(terms:created "2021-04-15")
Annotation(terms:created "2021/04/15")
Annotation(terms:creator _:genid136)
Annotation(terms:description "This ontology describes system capabilities, operating ranges, and survival ranges."@en)
Annotation(terms:license <http://www.opengeospatial.org/ogc/Software>)
Annotation(terms:license <http://www.w3.org/Consortium/Legal/2015/copyright-software-and-document>)
Annotation(terms:rights "Copyright 2017 W3C/OGC.")
Annotation(terms:title "System capabilities, operating ranges, and survival ranges ontology"@en)
Annotation(vann:preferredNamespacePrefix "ssn-system")
Annotation(vann:preferredNamespaceUri "http://www.w3.org/ns/ssn/systems/")
Annotation(rdfs:comment "Please report any errors to the W3C Spatial Data on the Web Working Group via the SDW WG Public List public-sdw-wg@w3.org"@en)
Annotation(rdfs:label "Sensor Dynamic Transfer Behavior Ontology (trans)"@en)
Annotation(rdfs:seeAlso <https://www.w3.org/2015/spatial/wiki/Semantic_Sensor_Network_Ontology>)

Declaration(Class(bibo:Standard))
Declaration(Class(<http://purl.org/vocommons/voaf#Vocabulary>))
Declaration(Class(om-2:Date))
Declaration(Class(om-2:Measure))
Declaration(Class(om-2:Quantity))
Declaration(Class(:Accuracy))
Declaration(Class(:AccuracyInterpretation))
Declaration(Class(:AccuracyMetric))
Declaration(Class(:BatteryInterpretation))
Declaration(Class(:BatteryLevel))
Declaration(Class(:BatteryLevelInterpretation))
Declaration(Class(:BatteryLevelMetric))
Declaration(Class(:CalibrationData))
Declaration(Class(:Completeness))
Declaration(Class(:CompletenessInterpretation))
Declaration(Class(:CompletenessMetric))
Declaration(Class(:Consistency))
Declaration(Class(:ConsistencyInterpretation))
Declaration(Class(:ConsistencyMetric))
Declaration(Class(:LastCalibrationDate))
Declaration(Class(:MeasurementUncertainty))
Declaration(Class(:MeasurementUncertaintyInterpretation))
Declaration(Class(:QualityIndicator))
Declaration(Class(:QualityInterpretation))
Declaration(Class(:QualityMetric))
Declaration(Class(:RecencyInterpretation))
Declaration(Class(:RecencyMetric))
Declaration(Class(:RemainingLifetimeInterpretation))
Declaration(Class(:SamplingRate))
Declaration(Class(:Timeliness))
Declaration(Class(:TimelinessInterpretation))
Declaration(Class(:TimelinessMetric))
Declaration(Class(:restAPI))
Declaration(Class(rdf:Seq))
Declaration(Class(<http://www.w3.org/2006/time#TemporalEntity>))
Declaration(Class(sosa:ActuatableProperty))
Declaration(Class(sosa:Actuation))
Declaration(Class(sosa:Actuator))
Declaration(Class(sosa:FeatureOfInterest))
Declaration(Class(sosa:OWLClassImpl_28ce790f_8a49_4961_93fa_6944a0d00033))
Declaration(Class(sosa:OWLClassImpl_469f12d2_b0e5_4426_91f4_16e9d18d8832))
Declaration(Class(sosa:OWLClassImpl_f8dae9b6_5094_43d9_a267_1f31d5992472))
Declaration(Class(sosa:ObservableProperty))
Declaration(Class(sosa:Observation))
Declaration(Class(sosa:Platform))
Declaration(Class(sosa:Procedure))
Declaration(Class(sosa:Result))
Declaration(Class(sosa:Sample))
Declaration(Class(sosa:Sampler))
Declaration(Class(sosa:Sampling))
Declaration(Class(sosa:Sensor))
Declaration(Class(<http://www.w3.org/ns/ssn/Deployment>))
Declaration(Class(<http://www.w3.org/ns/ssn/Input>))
Declaration(Class(<http://www.w3.org/ns/ssn/Output>))
Declaration(Class(<http://www.w3.org/ns/ssn/Property>))
Declaration(Class(<http://www.w3.org/ns/ssn/Stimulus>))
Declaration(Class(<http://www.w3.org/ns/ssn/System>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/Accuracy>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/ActuationRange>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/BatteryLifetime>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/Condition>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/DetectionLimit>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/Drift>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/Frequency>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/Latency>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/MaintenanceSchedule>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/MeasurementRange>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/OperatingPowerRange>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/OperatingProperty>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/OperatingRange>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/Precision>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/Resolution>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/ResponseTime>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/Selectivity>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/Sensitivity>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/SurvivalProperty>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/SurvivalRange>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/SystemCapability>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/SystemLifetime>))
Declaration(Class(<http://www.w3.org/ns/ssn/systems/SystemProperty>))
Declaration(Class(foaf:Agent))
Declaration(Class(<https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E1547>))
Declaration(Class(<https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E1706>))
Declaration(Class(<https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E1908>))
Declaration(Class(<https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E1995>))
Declaration(Class(<https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E2822>))
Declaration(Class(<https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E34>))
Declaration(Class(<https://raw.githubusercontent.com/HajoRijgersberg/OM/master/om-2.0.rdf#Unit>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlCalibrationModel>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlEquationModel>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlVariable>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#ExpandedUncertainty>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#MeasureWithUncertainty>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#Uncertainty>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#CalibratedSensor>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#CalibrationModel>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#Equation>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#Parameter>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#AnalyticDomain>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ArrayWithUncertainty>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#BandPass>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#BandStop>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Bessel>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Butterworth>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Chebyshev>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Continuous>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ContinuousImpulseResponseModel>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DimensionStructure>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Discrete>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Dynamic>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#EllipsoidalRegion>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Elliptic>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#EllipticRationalFunction>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FilterType>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FiniteImpulseResponseModel>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyBehavior>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyDomain>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencySpectrum>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#HighPass>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ImpulseResponseModel>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#InfiniteImpulseResponseModel>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LTISystem>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearAffineModel>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearDifferenceEquation>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearOrdinaryDifferentialEquation>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearStateSpaceModel>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearSystem>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LowPass>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MultivariateUncertainty>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NonLinearStateSpaceModel>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NonlinearSystem>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Parameter>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Polynomial>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#QualitativeBehavior>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#RationalFraction>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#RectangularRegion>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceMatrixNotation>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceModel>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Static>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StepResponseModel>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#SystemType>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TemporalBehavior>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TimeDomain>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TimeSeries>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TransferModel>))
Declaration(Class(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#UnivariateUncertainty>))
Declaration(ObjectProperty(om-2:hasValue))
Declaration(ObjectProperty(:Interprets))
Declaration(ObjectProperty(:hasIndicator))
Declaration(ObjectProperty(:hasInterpretation))
Declaration(ObjectProperty(:hasMetric))
Declaration(ObjectProperty(:inputAccessibleFrom))
Declaration(ObjectProperty(:inputHasUnit))
Declaration(ObjectProperty(:isMetricOf))
Declaration(ObjectProperty(owl:topObjectProperty))
Declaration(ObjectProperty(sosa:actsOnProperty))
Declaration(ObjectProperty(sosa:hasFeatureOfInterest))
Declaration(ObjectProperty(sosa:hasResult))
Declaration(ObjectProperty(sosa:hasSample))
Declaration(ObjectProperty(sosa:hosts))
Declaration(ObjectProperty(sosa:isActedOnBy))
Declaration(ObjectProperty(sosa:isFeatureOfInterestOf))
Declaration(ObjectProperty(sosa:isHostedBy))
Declaration(ObjectProperty(sosa:isObservedBy))
Declaration(ObjectProperty(sosa:isResultOf))
Declaration(ObjectProperty(sosa:isSampleOf))
Declaration(ObjectProperty(sosa:madeActuation))
Declaration(ObjectProperty(sosa:madeByActuator))
Declaration(ObjectProperty(sosa:madeBySampler))
Declaration(ObjectProperty(sosa:madeBySensor))
Declaration(ObjectProperty(sosa:madeObservation))
Declaration(ObjectProperty(sosa:madeSampling))
Declaration(ObjectProperty(sosa:observedProperty))
Declaration(ObjectProperty(sosa:observes))
Declaration(ObjectProperty(sosa:phenomenonTime))
Declaration(ObjectProperty(sosa:usedProcedure))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/deployedOnPlatform>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/deployedSystem>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/detects>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/forProperty>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/hasDeployment>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/hasInput>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/hasOutput>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/hasProperty>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/hasSubSystem>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/implementedBy>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/implements>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/inDeployment>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/isPropertyOf>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/isProxyFor>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/wasOriginatedBy>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/systems/hasOperatingProperty>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/systems/hasOperatingRange>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/systems/hasSurvivalProperty>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/systems/hasSurvivalRange>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/systems/hasSystemCapability>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/systems/hasSystemProperty>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/systems/inCondition>))
Declaration(ObjectProperty(<http://www.w3.org/ns/ssn/systems/qualityOfObservation>))
Declaration(ObjectProperty(<http://www.wurvoc.org/bibliography/om-2/OWLObjectPropertyImpl_a5c93e56_401a_49fb_8a5b_838e6534e6e4>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasEquation>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasEquationModel>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasLocation>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasMathMLDefinition>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasParameter>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasVariable>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasUncertainty>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#hasCalibrationModel>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasArrayDefinition>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCoefficients>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCoordinates>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCovarianceMatrix>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasDenominator>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFeedthroughMatrix>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFrequencyArray>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFrequencyStructure>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasInputMatrix>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasNumerator>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasOutputMatrix>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasPolynomialRoots>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasSystemMatrix>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasTimeArray>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasTimeStructure>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasValueArray>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasValueStructure>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isDefinedInDomain>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isOfFamily>))
Declaration(ObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isOfSystemType>))
Declaration(DataProperty(om-2:hasNumericalValue))
Declaration(DataProperty(:getRequest))
Declaration(DataProperty(:hasDate))
Declaration(DataProperty(:hasLiteralExpression))
Declaration(DataProperty(:isCriticalIf))
Declaration(DataProperty(:isGoodIf))
Declaration(DataProperty(:isSufficientIf))
Declaration(DataProperty(sosa:hasSimpleResult))
Declaration(DataProperty(sosa:resultTime))
Declaration(DataProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasCoverageFactor>))
Declaration(DataProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasCoverageProbability>))
Declaration(DataProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasIntervalMax>))
Declaration(DataProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasIntervalMin>))
Declaration(DataProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasStandardUncertainty>))
Declaration(DataProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCovarianceMatrix>))
Declaration(DataProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasMathMLexpression>))
Declaration(DataProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasTeXExpression>))
Declaration(NamedIndividual(om-2:AngularVelocity))
Declaration(NamedIndividual(:MPUBatteryDataSource))
Declaration(NamedIndividual(:MPUBatteryIndicator))
Declaration(NamedIndividual(:MPUBatteryInterpretation))
Declaration(NamedIndividual(:MPUBatteryMathObject))
Declaration(NamedIndividual(:MPUBatteryMetric))
Declaration(NamedIndividual(:MPUCalibrationDataSource))
Declaration(NamedIndividual(:MPUCalibrationIndicator))
Declaration(NamedIndividual(:MPURecencyInterpretation))
Declaration(NamedIndividual(:MPURecencyMetric))
Declaration(NamedIndividual(:MPURecencyObject))
Declaration(NamedIndividual(:MPUUncertaintyInterpretation))
Declaration(NamedIndividual(:MPUUncertaintyMetric))
Declaration(NamedIndividual(:MPUUncertaintyObject))
Declaration(NamedIndividual(<http://www.w3.org/ns/sosa/>))
Declaration(NamedIndividual(<http://www.w3.org/ns/ssn/>))
Declaration(NamedIndividual(<http://www.w3.org/ns/ssn/systems/>))
Declaration(NamedIndividual(<https://raw.githubusercontent.com/HajoRijgersberg/OM/master/om-2.0.rdf#OWLNamedIndividualImpl_2a3a2318_04b5_4baf_a108_c2d767ba8e7e>))
Declaration(NamedIndividual(<https://raw.githubusercontent.com/HajoRijgersberg/OM/master/om-2.0.rdf#Percentage>))
Declaration(NamedIndividual(<https://raw.githubusercontent.com/HajoRijgersberg/OM/master/om-2.0.rdf#radianPerSecond-Time>))
Declaration(NamedIndividual(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DenominatorArray>))
Declaration(NamedIndividual(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DenominatorUncertainty>))
Declaration(NamedIndividual(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPU9250>))
Declaration(NamedIndividual(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUDenominatorPolynomial>))
Declaration(NamedIndividual(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUNumeratorPolynomial>))
Declaration(NamedIndividual(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPURationalFraction>))
Declaration(NamedIndividual(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUcalibrationModel>))
Declaration(NamedIndividual(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUobservation>))
Declaration(NamedIndividual(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUresult>))
Declaration(NamedIndividual(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUresultuncertainty>))
Declaration(NamedIndividual(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NumeratorArray>))
Declaration(NamedIndividual(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NumeratorUncertainty>))
Declaration(NamedIndividual(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#SmartupUnit>))
Declaration(NamedIndividual(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#calibrationModel>))
Declaration(NamedIndividual(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covA>))
Declaration(NamedIndividual(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covB>))
Declaration(NamedIndividual(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covMatDenominator>))
Declaration(NamedIndividual(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covMatNumerator>))
Declaration(AnnotationProperty(terms:created))
Declaration(AnnotationProperty(terms:creator))
Declaration(AnnotationProperty(terms:description))
Declaration(AnnotationProperty(terms:license))
Declaration(AnnotationProperty(terms:rights))
Declaration(AnnotationProperty(terms:title))
Declaration(AnnotationProperty(vann:preferredNamespacePrefix))
Declaration(AnnotationProperty(vann:preferredNamespaceUri))
Declaration(AnnotationProperty(schema:domainIncludes))
Declaration(AnnotationProperty(schema:rangeIncludes))
Declaration(AnnotationProperty(om-2:hasUnit))
Declaration(AnnotationProperty(rdfs:comment))
Declaration(AnnotationProperty(rdfs:label))
Declaration(AnnotationProperty(owl:deprecated))
Declaration(AnnotationProperty(owl:minCardinality))
Declaration(AnnotationProperty(owl:qualifiedCardinality))
Declaration(AnnotationProperty(owl:versionInfo))
Declaration(AnnotationProperty(skos:definition))
Declaration(AnnotationProperty(skos:example))
Declaration(AnnotationProperty(skos:hiddenLabel))
Declaration(AnnotationProperty(skos:note))
Declaration(AnnotationProperty(WV:illustration))
Declaration(AnnotationProperty(WV:logo))
Declaration(AnnotationProperty(foaf:based_near))
Declaration(AnnotationProperty(foaf:name))
Declaration(Datatype(rdf:PlainLiteral))
Declaration(Datatype(xsd:string))
Declaration(Datatype(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral>))
Declaration(Datatype(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TeXLiteral>))

############################
#   Object Properties
############################

# Object Property: om-2:hasValue (om-2:hasValue)

ObjectPropertyDomain(om-2:hasValue <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>)

# Object Property: :Interprets (:Interprets)

InverseObjectProperties(:Interprets :hasInterpretation)
ObjectPropertyDomain(:Interprets :QualityInterpretation)
ObjectPropertyRange(:Interprets :QualityMetric)

# Object Property: :hasIndicator (:hasIndicator)

ObjectPropertyDomain(:hasIndicator <http://www.w3.org/ns/ssn/System>)
ObjectPropertyRange(:hasIndicator :QualityIndicator)

# Object Property: :hasInterpretation (:hasInterpretation)

ObjectPropertyDomain(:hasInterpretation :QualityMetric)
ObjectPropertyRange(:hasInterpretation :QualityInterpretation)

# Object Property: :hasMetric (:hasMetric)

InverseObjectProperties(:hasMetric :isMetricOf)
ObjectPropertyDomain(:hasMetric :QualityIndicator)
ObjectPropertyRange(:hasMetric :QualityMetric)

# Object Property: :inputAccessibleFrom (:inputAccessibleFrom)

ObjectPropertyDomain(:inputAccessibleFrom :QualityMetric)

# Object Property: :inputHasUnit (:inputHasUnit)

SubObjectPropertyOf(:inputHasUnit owl:topObjectProperty)
ObjectPropertyDomain(:inputHasUnit :QualityInterpretation)
ObjectPropertyRange(:inputHasUnit <https://raw.githubusercontent.com/HajoRijgersberg/OM/master/om-2.0.rdf#Unit>)

# Object Property: :isMetricOf (:isMetricOf)

ObjectPropertyDomain(:isMetricOf :QualityMetric)
ObjectPropertyRange(:isMetricOf :QualityIndicator)

# Object Property: sosa:actsOnProperty (acts on property)

AnnotationAssertion(schema:rangeIncludes sosa:actsOnProperty sosa:ActuatableProperty)
AnnotationAssertion(rdfs:comment sosa:actsOnProperty "Relation between an Actuation and the property of a FeatureOfInterest it is acting upon."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:actsOnProperty <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:actsOnProperty sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:actsOnProperty "acts on property"@en)
AnnotationAssertion(skos:definition sosa:actsOnProperty "Relation between an Actuation and the property of a FeatureOfInterest it is acting upon."@en)
AnnotationAssertion(skos:example sosa:actsOnProperty "In the activity (Actuation) of automatically closing a window if the temperature in a room drops below 20 degrees Celsius, the property on which the Actuator acts upon is the state of the window as it changes from being open to being closed. "@en)
InverseObjectProperties(sosa:actsOnProperty sosa:isActedOnBy)

# Object Property: sosa:hasFeatureOfInterest (has feature of interest)

AnnotationAssertion(schema:rangeIncludes sosa:hasFeatureOfInterest sosa:FeatureOfInterest)
AnnotationAssertion(schema:rangeIncludes sosa:hasFeatureOfInterest sosa:OWLClassImpl_080542bc_4238_4cbd_a036_8217a87850dd)
AnnotationAssertion(rdfs:comment sosa:hasFeatureOfInterest "A relation between an Observation and the entity whose quality was observed, or between an Actuation and the entity whose property was modified, or between an act of Sampling and the entity that was sampled."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:hasFeatureOfInterest <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:hasFeatureOfInterest sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:hasFeatureOfInterest "has feature of interest"@en)
AnnotationAssertion(skos:definition sosa:hasFeatureOfInterest "A relation between an Observation and the entity whose quality was observed, or between an Actuation and the entity whose property was modified, or between an act of Sampling and the entity that was sampled."@en)
AnnotationAssertion(skos:example sosa:hasFeatureOfInterest "For example, in an Observation of the weight of a person, the FeatureOfInterest is the person and the property is its weight."@en)
InverseObjectProperties(sosa:hasFeatureOfInterest sosa:isFeatureOfInterestOf)

# Object Property: sosa:hasResult (has result)

AnnotationAssertion(schema:rangeIncludes sosa:hasResult sosa:OWLClassImpl_080542bc_4238_4cbd_a036_8217a87850dd)
AnnotationAssertion(schema:rangeIncludes sosa:hasResult sosa:OWLClassImpl_f8dae9b6_5094_43d9_a267_1f31d5992472)
AnnotationAssertion(rdfs:comment sosa:hasResult "Relation linking an Observation or Actuation or act of Sampling and a Result or Sample."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:hasResult <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:hasResult sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:hasResult "has result"@en)
AnnotationAssertion(skos:definition sosa:hasResult "Relation linking an Observation or Actuation or act of Sampling and a Result or Sample."@en)
InverseObjectProperties(sosa:hasResult sosa:isResultOf)

# Object Property: sosa:hasSample (has sample)

AnnotationAssertion(schema:domainIncludes sosa:hasSample sosa:FeatureOfInterest)
AnnotationAssertion(schema:rangeIncludes sosa:hasSample sosa:OWLClassImpl_080542bc_4238_4cbd_a036_8217a87850dd)
AnnotationAssertion(rdfs:comment sosa:hasSample "Relation between a FeatureOfInterest and the Sample used to represent it."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:hasSample <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:hasSample sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:hasSample "has sample"@en)
AnnotationAssertion(skos:definition sosa:hasSample "Relation between a FeatureOfInterest and the Sample used to represent it."@en)
InverseObjectProperties(sosa:hasSample sosa:isSampleOf)
InverseFunctionalObjectProperty(sosa:hasSample)

# Object Property: sosa:hosts (sosa:hosts)

InverseObjectProperties(sosa:hosts sosa:isHostedBy)

# Object Property: sosa:isActedOnBy (is acted on by)

AnnotationAssertion(schema:domainIncludes sosa:isActedOnBy sosa:ActuatableProperty)
AnnotationAssertion(rdfs:comment sosa:isActedOnBy "Relation between an ActuatableProperty of a FeatureOfInterest and an Actuation changing its state."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:isActedOnBy <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:isActedOnBy sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:isActedOnBy "is acted on by"@en)
AnnotationAssertion(skos:definition sosa:isActedOnBy "Relation between an ActuatableProperty of a FeatureOfInterest and an Actuation changing its state."@en)
AnnotationAssertion(skos:example sosa:isActedOnBy "In the activity (Actuation) of automatically closing a window if the temperature in a room drops below 20 degrees Celsius, the property on which the Actuator acts upon is the state of the window as it changes from being open to being closed. "@en)

# Object Property: sosa:isFeatureOfInterestOf (is feature of interest of)

AnnotationAssertion(schema:domainIncludes sosa:isFeatureOfInterestOf sosa:FeatureOfInterest)
AnnotationAssertion(schema:domainIncludes sosa:isFeatureOfInterestOf sosa:OWLClassImpl_080542bc_4238_4cbd_a036_8217a87850dd)
AnnotationAssertion(rdfs:comment sosa:isFeatureOfInterestOf "A relation between a FeatureOfInterest and an Observation about it, an Actuation acting on it, or an act of Sampling that sampled it."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:isFeatureOfInterestOf <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:isFeatureOfInterestOf sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:isFeatureOfInterestOf "is feature of interest of"@en)
AnnotationAssertion(skos:definition sosa:isFeatureOfInterestOf "A relation between a FeatureOfInterest and an Observation about it, an Actuation acting on it, or an act of Sampling that sampled it."@en)

# Object Property: sosa:isObservedBy (is observed by)

AnnotationAssertion(schema:domainIncludes sosa:isObservedBy sosa:ObservableProperty)
AnnotationAssertion(schema:rangeIncludes sosa:isObservedBy sosa:OWLClassImpl_28ce790f_8a49_4961_93fa_6944a0d00033)
AnnotationAssertion(rdfs:comment sosa:isObservedBy "Relation between an ObservableProperty and the Sensor able to observe it."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:isObservedBy <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:isObservedBy sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:isObservedBy "is observed by"@en)
AnnotationAssertion(skos:definition sosa:isObservedBy "Relation between an ObservableProperty and the Sensor able to observe it."@en)
InverseObjectProperties(sosa:isObservedBy sosa:observes)

# Object Property: sosa:isResultOf (is result of)

AnnotationAssertion(schema:domainIncludes sosa:isResultOf sosa:OWLClassImpl_080542bc_4238_4cbd_a036_8217a87850dd)
AnnotationAssertion(schema:domainIncludes sosa:isResultOf sosa:OWLClassImpl_f8dae9b6_5094_43d9_a267_1f31d5992472)
AnnotationAssertion(rdfs:comment sosa:isResultOf "Relation linking a Result to the Observation or Actuation or act of Sampling that created or caused it."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:isResultOf <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:isResultOf sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:isResultOf "is result of"@en)
AnnotationAssertion(skos:definition sosa:isResultOf "Relation linking a Result to the Observation or Actuation or act of Sampling that created or caused it."@en)

# Object Property: sosa:isSampleOf (is sample of)

AnnotationAssertion(schema:domainIncludes sosa:isSampleOf sosa:OWLClassImpl_080542bc_4238_4cbd_a036_8217a87850dd)
AnnotationAssertion(schema:rangeIncludes sosa:isSampleOf sosa:FeatureOfInterest)
AnnotationAssertion(rdfs:comment sosa:isSampleOf "Relation from a Sample to the FeatureOfInterest that it is intended to be representative of."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:isSampleOf <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:isSampleOf sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:isSampleOf "is sample of"@en)
AnnotationAssertion(skos:definition sosa:isSampleOf "Relation from a Sample to the FeatureOfInterest that it is intended to be representative of."@en)
FunctionalObjectProperty(sosa:isSampleOf)

# Object Property: sosa:madeActuation (made actuation)

AnnotationAssertion(schema:domainIncludes sosa:madeActuation sosa:OWLClassImpl_469f12d2_b0e5_4426_91f4_16e9d18d8832)
AnnotationAssertion(rdfs:comment sosa:madeActuation "Relation between an Actuator and the Actuation it has made."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:madeActuation <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:madeActuation sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:madeActuation "made actuation"@en)
AnnotationAssertion(skos:definition sosa:madeActuation "Relation between an Actuator and the Actuation it has made."@en)
InverseObjectProperties(sosa:madeActuation sosa:madeByActuator)

# Object Property: sosa:madeByActuator (made by actuator)

AnnotationAssertion(schema:rangeIncludes sosa:madeByActuator sosa:OWLClassImpl_469f12d2_b0e5_4426_91f4_16e9d18d8832)
AnnotationAssertion(rdfs:comment sosa:madeByActuator "Relation linking an Actuation to the Actuator that made that Actuation."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:madeByActuator <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:madeByActuator sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:madeByActuator "made by actuator"@en)
AnnotationAssertion(skos:definition sosa:madeByActuator "Relation linking an Actuation to the Actuator that made that Actuation."@en)

# Object Property: sosa:madeBySampler (made by sampler)

AnnotationAssertion(schema:rangeIncludes sosa:madeBySampler sosa:OWLClassImpl_7dca06dd_f0b0_4b8d_b9db_4952d5231102)
AnnotationAssertion(rdfs:comment sosa:madeBySampler "Relation linking an act of Sampling to the Sampler (sampling device or entity) that made it."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:madeBySampler <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:madeBySampler sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:madeBySampler "made by sampler"@en)
AnnotationAssertion(skos:definition sosa:madeBySampler "Relation linking an act of Sampling to the Sampler (sampling device or entity) that made it."@en)
InverseObjectProperties(sosa:madeBySampler sosa:madeSampling)

# Object Property: sosa:madeBySensor (made by sensor)

AnnotationAssertion(schema:rangeIncludes sosa:madeBySensor sosa:OWLClassImpl_28ce790f_8a49_4961_93fa_6944a0d00033)
AnnotationAssertion(rdfs:comment sosa:madeBySensor "Relation between an Observation and the Sensor which made the Observation."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:madeBySensor <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:madeBySensor sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:madeBySensor "made by sensor"@en)
AnnotationAssertion(skos:definition sosa:madeBySensor "Relation between an Observation and the Sensor which made the Observation."@en)
InverseObjectProperties(sosa:madeBySensor sosa:madeObservation)

# Object Property: sosa:madeObservation (made observation)

AnnotationAssertion(schema:domainIncludes sosa:madeObservation sosa:OWLClassImpl_28ce790f_8a49_4961_93fa_6944a0d00033)
AnnotationAssertion(rdfs:comment sosa:madeObservation "Relation between a Sensor and an Observation made by the Sensor."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:madeObservation <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:madeObservation sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:madeObservation "made observation"@en)
AnnotationAssertion(skos:definition sosa:madeObservation "Relation between a Sensor and an Observation made by the Sensor."@en)

# Object Property: sosa:madeSampling (made sampling)

AnnotationAssertion(schema:domainIncludes sosa:madeSampling sosa:OWLClassImpl_7dca06dd_f0b0_4b8d_b9db_4952d5231102)
AnnotationAssertion(rdfs:comment sosa:madeSampling "Relation between a Sampler (sampling device or entity) and the Sampling act it performed."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:madeSampling <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:madeSampling sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:madeSampling "made sampling"@en)
AnnotationAssertion(skos:definition sosa:madeSampling "Relation between a Sampler (sampling device or entity) and the Sampling act it performed."@en)

# Object Property: sosa:observedProperty (observed property)

AnnotationAssertion(schema:rangeIncludes sosa:observedProperty sosa:ObservableProperty)
AnnotationAssertion(rdfs:comment sosa:observedProperty "Relation linking an Observation to the property that was observed. The ObservableProperty should be a property of the FeatureOfInterest (linked by hasFeatureOfInterest) of this Observation."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:observedProperty <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:observedProperty sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:observedProperty "observed property"@en)
AnnotationAssertion(skos:definition sosa:observedProperty "Relation linking an Observation to the property that was observed. The ObservableProperty should be a property of the FeatureOfInterest (linked by hasFeatureOfInterest) of this Observation."@en)

# Object Property: sosa:observes (sosa:observes)

SubObjectPropertyOf(sosa:observes <http://www.w3.org/ns/ssn/forProperty>)

# Object Property: sosa:phenomenonTime (phenomenon time)

AnnotationAssertion(schema:rangeIncludes sosa:phenomenonTime <http://www.w3.org/2006/time#TemporalEntity>)
AnnotationAssertion(rdfs:comment sosa:phenomenonTime "The time that the Result of an Observation, Actuation or Sampling applies to the FeatureOfInterest. Not necessarily the same as the resultTime. May be an Interval or an Instant, or some other compound TemporalEntity."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:phenomenonTime <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:phenomenonTime sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:phenomenonTime "phenomenon time"@en)
AnnotationAssertion(skos:definition sosa:phenomenonTime "The time that the Result of an Observation, Actuation or Sampling applies to the FeatureOfInterest. Not necessarily the same as the resultTime. May be an Interval or an Instant, or some other compound TemporalEntity."@en)

# Object Property: sosa:usedProcedure (used procedure)

AnnotationAssertion(rdfs:comment sosa:usedProcedure "A relation to link to a re-usable Procedure used in making an Observation, an Actuation, or a Sample, typically through a Sensor, Actuator or Sampler."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:usedProcedure <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:usedProcedure sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:usedProcedure "used procedure"@en)
AnnotationAssertion(skos:definition sosa:usedProcedure "A relation to link to a re-usable Procedure used in making an Observation, an Actuation, or a Sample, typically through a Sensor, Actuator or Sampler."@en)

# Object Property: <http://www.w3.org/ns/ssn/deployedOnPlatform> (deployed on platform)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/deployedOnPlatform> "Relation between a Deployment and the Platform on which the Systems are deployed."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/deployedOnPlatform> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/deployedOnPlatform> "deployed on platform"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/deployedOnPlatform> "Relation between a Deployment and the Platform on which the Systems are deployed."@en)
InverseObjectProperties(<http://www.w3.org/ns/ssn/deployedOnPlatform> <http://www.w3.org/ns/ssn/inDeployment>)

# Object Property: <http://www.w3.org/ns/ssn/deployedSystem> (deployed system)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/deployedSystem> "Relation between a Deployment and a deployed System."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/deployedSystem> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/deployedSystem> "deployed system"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/deployedSystem> "Relation between a Deployment and a deployed System."@en)
InverseObjectProperties(<http://www.w3.org/ns/ssn/deployedSystem> <http://www.w3.org/ns/ssn/hasDeployment>)

# Object Property: <http://www.w3.org/ns/ssn/detects> (detects)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/detects> "A relation from a Sensor to the Stimulus that the Sensor detects. The Stimulus itself will be serving as a proxy for some ObservableProperty."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/detects> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/detects> "detects"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/detects> "A relation from a Sensor to the Stimulus that the Sensor detects. The Stimulus itself will be serving as a proxy for some ObservableProperty."@en)

# Object Property: <http://www.w3.org/ns/ssn/forProperty> (for property)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/forProperty> "A relation between some aspect of an entity and a Property."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/forProperty> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/forProperty> "for property"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/forProperty> "A relation between some aspect of an entity and a Property."@en)
AnnotationAssertion(skos:example <http://www.w3.org/ns/ssn/forProperty> "For example, from a Sensor to the properties it can observe; from an Actuator to the properties it can act on; from a Deployment to the properties it was installed to observe or act on; from a SystemCapability to the Property the capability is described for."@en)

# Object Property: <http://www.w3.org/ns/ssn/hasDeployment> (has deployment)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/hasDeployment> "Relation between a System and a Deployment, recording that the System is deployed in that Deployment."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/hasDeployment> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/hasDeployment> "has deployment"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/hasDeployment> "Relation between a System and a Deployment, recording that the System is deployed in that Deployment."@en)

# Object Property: <http://www.w3.org/ns/ssn/hasInput> (has input)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/hasInput> "Relation between a Procedure and an Input to it."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/hasInput> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/hasInput> "has input"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/hasInput> "Relation between a Procedure and an Input to it."@en)

# Object Property: <http://www.w3.org/ns/ssn/hasOutput> (has output)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/hasOutput> "Relation between a Procedure and an Output of it."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/hasOutput> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/hasOutput> "has output"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/hasOutput> "Relation between a Procedure and an Output of it."@en)

# Object Property: <http://www.w3.org/ns/ssn/hasProperty> (has property)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/hasProperty> "Relation between an entity and a Property of that entity."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/hasProperty> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/hasProperty> "has property"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/hasProperty> "Relation between an entity and a Property of that entity."@en)
InverseObjectProperties(<http://www.w3.org/ns/ssn/hasProperty> <http://www.w3.org/ns/ssn/isPropertyOf>)

# Object Property: <http://www.w3.org/ns/ssn/hasSubSystem> (has subsystem)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/hasSubSystem> "Relation between a System and its component parts."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/hasSubSystem> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/hasSubSystem> "has subsystem"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/hasSubSystem> "Relation between a System and its component parts."@en)

# Object Property: <http://www.w3.org/ns/ssn/implementedBy> (implemented by)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/implementedBy> "Relation between a Procedure (an algorithm, procedure or method) and an entity that implements that Procedure in some executable way."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/implementedBy> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/implementedBy> "implemented by"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/implementedBy> "Relation between a Procedure (an algorithm, procedure or method) and an entity that implements that Procedure in some executable way."@en)
AnnotationAssertion(skos:example <http://www.w3.org/ns/ssn/implementedBy> "For example, the relationship between a scientific measuring Procedure and a sensor that senses via that Procedure."@en)
InverseObjectProperties(<http://www.w3.org/ns/ssn/implementedBy> <http://www.w3.org/ns/ssn/implements>)

# Object Property: <http://www.w3.org/ns/ssn/implements> (implements)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/implements> "Relation between an entity that implements a Procedure in some executable way and the Procedure (an algorithm, procedure or method)."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/implements> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/implements> "implements"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/implements> "Relation between an entity that implements a Procedure in some executable way and the Procedure (an algorithm, procedure or method)."@en)
AnnotationAssertion(skos:example <http://www.w3.org/ns/ssn/implements> "For example, the relationship between a sensor and the scientific measuring Procedure via which it senses."@en)

# Object Property: <http://www.w3.org/ns/ssn/inDeployment> (in deployment)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/inDeployment> "Relation between a Platform and a Deployment, meaning that the deployedSystems of the Deployment are hosted on the Platform."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/inDeployment> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/inDeployment> "in deployment"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/inDeployment> "Relation between a Platform and a Deployment, meaning that the deployedSystems of the Deployment are hosted on the Platform."@en)
AnnotationAssertion(skos:example <http://www.w3.org/ns/ssn/inDeployment> "For example, a relation between a buoy and a deployment of several Sensors."@en)

# Object Property: <http://www.w3.org/ns/ssn/isPropertyOf> (is property of)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/isPropertyOf> "Relation between a Property and the entity it belongs to."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/isPropertyOf> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/isPropertyOf> "is property of"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/isPropertyOf> "Relation between a Property and the entity it belongs to."@en)

# Object Property: <http://www.w3.org/ns/ssn/isProxyFor> (is proxy for)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/isProxyFor> "A relation from a Stimulus to the Property that the Stimulus is serving as a proxy for."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/isProxyFor> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/isProxyFor> "is proxy for"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/isProxyFor> "A relation from a Stimulus to the Property that the Stimulus is serving as a proxy for."@en)
AnnotationAssertion(skos:example <http://www.w3.org/ns/ssn/isProxyFor> "For example, the expansion of quicksilver is a stimulus that serves as a proxy for some temperature property. An increase or decrease in the velocity of spinning cups on a wind sensor is serving as a proxy for the wind speed."@en)

# Object Property: <http://www.w3.org/ns/ssn/wasOriginatedBy> (was originated by)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/wasOriginatedBy> "Relation between an Observation and the Stimulus that originated it."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/wasOriginatedBy> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/wasOriginatedBy> "was originated by"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/wasOriginatedBy> "Relation between an Observation and the Stimulus that originated it."@en)
FunctionalObjectProperty(<http://www.w3.org/ns/ssn/wasOriginatedBy>)

# Object Property: <http://www.w3.org/ns/ssn/systems/hasOperatingProperty> (has operating property)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/hasOperatingProperty> "Relation from an OperatingRange of a System to a OperatingPropery describing the operating range of the System."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/hasOperatingProperty> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/hasOperatingProperty> "has operating property"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/hasOperatingProperty> "Relation from an OperatingRange of a System to a OperatingPropery describing the operating range of the System."@en)
SubObjectPropertyOf(<http://www.w3.org/ns/ssn/systems/hasOperatingProperty> <http://www.w3.org/ns/ssn/hasProperty>)

# Object Property: <http://www.w3.org/ns/ssn/systems/hasOperatingRange> (has operating range)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/hasOperatingRange> "Relation from a System to an OperatingRange describing the normal operating environment of the System."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/hasOperatingRange> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/hasOperatingRange> "has operating range"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/hasOperatingRange> "Relation from a System to an OperatingRange describing the normal operating environment of the System."@en)
SubObjectPropertyOf(<http://www.w3.org/ns/ssn/systems/hasOperatingRange> <http://www.w3.org/ns/ssn/hasProperty>)

# Object Property: <http://www.w3.org/ns/ssn/systems/hasSurvivalProperty> (has survival property)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/hasSurvivalProperty> "Relation from a SurvivalRange of a System to a SurvivalProperty describing the survival range of the System."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/hasSurvivalProperty> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/hasSurvivalProperty> "has survival property"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/hasSurvivalProperty> "Relation from a SurvivalRange of a System to a SurvivalProperty describing the survival range of the System."@en)
SubObjectPropertyOf(<http://www.w3.org/ns/ssn/systems/hasSurvivalProperty> <http://www.w3.org/ns/ssn/hasProperty>)

# Object Property: <http://www.w3.org/ns/ssn/systems/hasSurvivalRange> (has survival range)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/hasSurvivalRange> "Relation from a System to a SurvivalRange."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/hasSurvivalRange> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/hasSurvivalRange> "has survival range"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/hasSurvivalRange> "Relation from a System to a SurvivalRange."@en)
SubObjectPropertyOf(<http://www.w3.org/ns/ssn/systems/hasSurvivalRange> <http://www.w3.org/ns/ssn/hasProperty>)

# Object Property: <http://www.w3.org/ns/ssn/systems/hasSystemCapability> (has system capability)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/hasSystemCapability> "Relation from a System to a SystemCapability describing the capabilities of the System under certain Conditions."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/hasSystemCapability> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/hasSystemCapability> "has system capability"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/hasSystemCapability> "Relation from a System to a SystemCapability describing the capabilities of the System under certain Conditions."@en)
SubObjectPropertyOf(<http://www.w3.org/ns/ssn/systems/hasSystemCapability> <http://www.w3.org/ns/ssn/hasProperty>)

# Object Property: <http://www.w3.org/ns/ssn/systems/hasSystemProperty> (has system property)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/hasSystemProperty> "Relation from an SystemCapability of a System to a SystemProperty describing the capabilities of the System."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/hasSystemProperty> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/hasSystemProperty> "has system property"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/hasSystemProperty> "Relation from an SystemCapability of a System to a SystemProperty describing the capabilities of the System."@en)
SubObjectPropertyOf(<http://www.w3.org/ns/ssn/systems/hasSystemProperty> <http://www.w3.org/ns/ssn/hasProperty>)

# Object Property: <http://www.w3.org/ns/ssn/systems/inCondition> (in condition)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/inCondition> "Describes the prevailing environmental conditions for SystemCapabilites, OperatingRanges and SurvivalRanges."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/inCondition> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/inCondition> "in condition"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/inCondition> "Describes the prevailing environmental conditions for SystemCapabilites, OperatingRanges and SurvivalRanges."@en)
AnnotationAssertion(skos:example <http://www.w3.org/ns/ssn/systems/inCondition> "Used for example to say that a sensor has a particular accuracy in particular conditions."@en)

# Object Property: <http://www.w3.org/ns/ssn/systems/qualityOfObservation> (quality of observation)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/qualityOfObservation> "Relation linking an Observation to the adjudged quality of the Result. This is complimentary to the SystemCapability information recorded for the Sensor that made the Observation."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/qualityOfObservation> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/qualityOfObservation> "quality of observation"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/qualityOfObservation> "Relation linking an Observation to the adjudged quality of the Result. This is complimentary to the SystemCapability information recorded for the Sensor that made the Observation."@en)

# Object Property: <http://www.wurvoc.org/bibliography/om-2/OWLObjectPropertyImpl_a5c93e56_401a_49fb_8a5b_838e6534e6e4> (reference)

AnnotationAssertion(rdfs:label <http://www.wurvoc.org/bibliography/om-2/OWLObjectPropertyImpl_a5c93e56_401a_49fb_8a5b_838e6534e6e4> "reference"@en)
FunctionalObjectProperty(<http://www.wurvoc.org/bibliography/om-2/OWLObjectPropertyImpl_a5c93e56_401a_49fb_8a5b_838e6534e6e4>)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasEquation> (has equation)

AnnotationAssertion(schema:domainIncludes <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasEquation> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlEquationModel>)
AnnotationAssertion(schema:rangeIncludes <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasEquation> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlEquation>)
AnnotationAssertion(rdfs:comment <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasEquation> "Relation between an EquationModel and its Equations(s)."@en)
AnnotationAssertion(rdfs:isDefinedBy <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasEquation> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#>)
AnnotationAssertion(rdfs:label <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasEquation> "has equation"@en)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasEquationModel> (has equation model)

AnnotationAssertion(rdfs:isDefinedBy <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasEquationModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl>)
AnnotationAssertion(rdfs:label <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasEquationModel> "has equation model"@en)
SubObjectPropertyOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasEquationModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasLocation>)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasLocation> (has location)

AnnotationAssertion(schema:domainIncludes <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasLocation> <http://www.w3.org/ns/sosa#Sensor>)
AnnotationAssertion(schema:rangeIncludes <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasLocation> <http://www.opengis.net/ont/geosparql#SpatialThing>)
AnnotationAssertion(schema:rangeIncludes <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasLocation> <http://www.w3.org/ns/sosa#FeatureOfInterest>)
AnnotationAssertion(rdfs:comment <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasLocation> "Relation between a Sensor and its location."@en)
AnnotationAssertion(rdfs:isDefinedBy <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasLocation> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#>)
AnnotationAssertion(rdfs:label <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasLocation> "has location"@en)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasMathMLDefinition> (has MathML definition)

AnnotationAssertion(schema:domainIncludes <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasMathMLDefinition> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlEquation>)
AnnotationAssertion(schema:rangeIncludes <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasMathMLDefinition> xsd:string)
AnnotationAssertion(rdfs:comment <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasMathMLDefinition> "Relation between an Equation and its MathML-representation string."@en)
AnnotationAssertion(rdfs:isDefinedBy <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasMathMLDefinition> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#>)
AnnotationAssertion(rdfs:label <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasMathMLDefinition> "has MathML definition"@en)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasParameter> (has parameter)

AnnotationAssertion(schema:domainIncludes <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasParameter> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlEquationModel>)
AnnotationAssertion(schema:rangeIncludes <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasParameter> om-2:Measure)
AnnotationAssertion(schema:rangeIncludes <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasParameter> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlMeasureWithUncertainty>)
AnnotationAssertion(schema:rangeIncludes <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasParameter> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlParameter>)
AnnotationAssertion(rdfs:comment <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasParameter> "Relation between an EquationModel and the Parameter(s) used in the mathematical expression."@en)
AnnotationAssertion(rdfs:isDefinedBy <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasParameter> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl>)
AnnotationAssertion(rdfs:label <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasParameter> "has parameter"@en)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasVariable> (has variable)

AnnotationAssertion(schema:domainIncludes <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasVariable> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlEquationModel>)
AnnotationAssertion(schema:rangeIncludes <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasVariable> om-2:Quantity)
AnnotationAssertion(schema:rangeIncludes <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasVariable> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlVariable>)
AnnotationAssertion(rdfs:comment <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasVariable> "Relation between an EquationModel and the Variables(s) used in the mathematical expression."@en)
AnnotationAssertion(rdfs:isDefinedBy <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasVariable> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#>)
AnnotationAssertion(rdfs:label <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasVariable> "has variable"@en)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasUncertainty> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasUncertainty>)

ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasUncertainty> om-2:Measure)
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasUncertainty> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Parameter>)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasUncertainty> :MeasurementUncertainty)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasUncertainty> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#Uncertainty>)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#hasCalibrationModel> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#hasCalibrationModel>)

AnnotationAssertion(schema:rangeIncludes <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#hasCalibrationModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlCalibrationModel>)
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#hasCalibrationModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#CalibratedSensor>)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasArrayDefinition> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasArrayDefinition>)

SubObjectPropertyOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasArrayDefinition> om-2:hasValue)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasArrayDefinition> om-2:Measure)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasArrayDefinition> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior>)

ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TransferModel>)
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior> ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#QualitativeBehavior>))
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior> ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>))
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isDefinedInDomain> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyDomain>))
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isOfSystemType> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearSystem>))
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#QualitativeBehavior>)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCoefficients> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCoefficients>)

AnnotationAssertion(rdfs:comment <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCoefficients> "A polynomial is defined by its coefficients stored in an array.")
SubObjectPropertyOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCoefficients> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasArrayDefinition>)
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCoefficients> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCoefficients> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCoordinates> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCoordinates>)

SubObjectPropertyOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCoordinates> om-2:hasValue)
SubObjectPropertyOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCoordinates> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasArrayDefinition>)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCovarianceMatrix> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCovarianceMatrix>)

ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCovarianceMatrix> <https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E34>)
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCovarianceMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>)
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCovarianceMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MultivariateUncertainty>)
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCovarianceMatrix> ObjectMinCardinality(1 :isMetricOf <https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E1547>))
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCovarianceMatrix> <https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E34>)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCovarianceMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasDenominator> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasDenominator>)

ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasDenominator> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#RationalFraction>)
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasDenominator> ObjectMinCardinality(0 om-2:hasValue om-2:Measure))
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasDenominator> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Polynomial>)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasDenominator> ObjectMinCardinality(0 om-2:hasValue om-2:Measure))

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFeedthroughMatrix> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFeedthroughMatrix>)

SubObjectPropertyOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFeedthroughMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasArrayDefinition>)
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFeedthroughMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceMatrixNotation>)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFeedthroughMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFrequencyArray> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFrequencyArray>)

SubObjectPropertyOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFrequencyArray> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCoordinates>)
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFrequencyArray> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencySpectrum>)
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFrequencyArray> ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFrequencyArray> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>))
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFrequencyArray> ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasValueArray> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>))

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFrequencyStructure> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFrequencyStructure>)

SubObjectPropertyOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFrequencyStructure> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasValueStructure>)
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFrequencyStructure> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TransferModel>)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFrequencyStructure> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DimensionStructure>)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasInputMatrix> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasInputMatrix>)

SubObjectPropertyOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasInputMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasArrayDefinition>)
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasInputMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceMatrixNotation>)
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasInputMatrix> ObjectMinCardinality(0 om-2:hasValue om-2:Measure))
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasInputMatrix> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasInputMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>))
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasInputMatrix> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasOutputMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>))
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasInputMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasInputMatrix> ObjectMinCardinality(0 om-2:hasValue om-2:Measure))
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasInputMatrix> DataAllValuesFrom(om-2:hasNumericalValue DataUnionOf(rdf:XMLLiteral <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TeXLiteral>)))

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasNumerator> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasNumerator>)

ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasNumerator> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#RationalFraction>)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasNumerator> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Polynomial>)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasOutputMatrix> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasOutputMatrix>)

SubObjectPropertyOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasOutputMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasArrayDefinition>)
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasOutputMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceMatrixNotation>)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasOutputMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasPolynomialRoots> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasPolynomialRoots>)

AnnotationAssertion(rdfs:comment <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasPolynomialRoots> "A polynomial is defined by its roots stored in an array.")
SubObjectPropertyOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasPolynomialRoots> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasArrayDefinition>)
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasPolynomialRoots> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Polynomial>)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasPolynomialRoots> om-2:Measure)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasPolynomialRoots> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasSystemMatrix> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasSystemMatrix>)

SubObjectPropertyOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasSystemMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasArrayDefinition>)
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasSystemMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceMatrixNotation>)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasSystemMatrix> om-2:Measure)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasSystemMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasTimeArray> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasTimeArray>)

SubObjectPropertyOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasTimeArray> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCoordinates>)
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasTimeArray> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TimeSeries>)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasTimeStructure> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasTimeStructure>)

SubObjectPropertyOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasTimeStructure> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasValueStructure>)
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasTimeStructure> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TransferModel>)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasTimeStructure> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DimensionStructure>)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasValueArray> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasValueArray>)

SubObjectPropertyOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasValueArray> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasArrayDefinition>)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasValueArray> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasValueStructure> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasValueStructure>)

FunctionalObjectProperty(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasValueStructure>)
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasValueStructure> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TransferModel>)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasValueStructure> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DimensionStructure>)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isDefinedInDomain> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isDefinedInDomain>)

SubObjectPropertyOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isDefinedInDomain> owl:topObjectProperty)
ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isDefinedInDomain> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TransferModel>)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isDefinedInDomain> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#AnalyticDomain>)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy>)

ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TransferModel>)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>)

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isOfFamily> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isOfFamily>)

ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isOfFamily> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FilterType>)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isOfFamily> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyBehavior>))

# Object Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isOfSystemType> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isOfSystemType>)

ObjectPropertyDomain(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isOfSystemType> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TransferModel>)
ObjectPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isOfSystemType> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#SystemType>)


############################
#   Data Properties
############################

# Data Property: :getRequest (:getRequest)

DataPropertyDomain(:getRequest :restAPI)
DataPropertyRange(:getRequest rdf:HTML)

# Data Property: :hasDate (:hasDate)

DataPropertyDomain(:hasDate :LastCalibrationDate)
DataPropertyDomain(:hasDate <http://www.w3.org/ns/ssn/systems/SystemProperty>)
DataPropertyRange(:hasDate xsd:dateTime)

# Data Property: :isCriticalIf (:isCriticalIf)

DataPropertyDomain(:isCriticalIf :QualityInterpretation)
DataPropertyRange(:isCriticalIf DataUnionOf(rdf:XMLLiteral <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TeXLiteral>))
DisjointDataProperties(:isCriticalIf :isGoodIf)
DisjointDataProperties(:isCriticalIf :isSufficientIf)

# Data Property: :isGoodIf (:isGoodIf)

DataPropertyDomain(:isGoodIf :QualityInterpretation)
DataPropertyRange(:isGoodIf DataUnionOf(rdf:XMLLiteral <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TeXLiteral>))
DisjointDataProperties(:isGoodIf :isSufficientIf)

# Data Property: :isSufficientIf (:isSufficientIf)

SubDataPropertyOf(:isSufficientIf owl:topDataProperty)
DataPropertyDomain(:isSufficientIf :QualityInterpretation)
DataPropertyRange(:isSufficientIf DataUnionOf(rdf:XMLLiteral <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TeXLiteral>))

# Data Property: sosa:hasSimpleResult (has simple result)

AnnotationAssertion(rdfs:comment sosa:hasSimpleResult "The simple value of an Observation or Actuation or act of Sampling."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:hasSimpleResult <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:hasSimpleResult sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:hasSimpleResult "has simple result"@en)
AnnotationAssertion(skos:definition sosa:hasSimpleResult "The simple value of an Observation or Actuation or act of Sampling."@en)
AnnotationAssertion(skos:example sosa:hasSimpleResult "For instance, the values 23 or true."@en)

# Data Property: sosa:resultTime (result time)

AnnotationAssertion(rdfs:comment sosa:resultTime "The result time is the instant of time when the Observation, Actuation or Sampling activity was completed."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:resultTime <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:resultTime sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:resultTime "result time"@en)
AnnotationAssertion(skos:definition sosa:resultTime "The result time is the instant of time when the Observation, Actuation or Sampling activity was completed."@en)
DataPropertyRange(sosa:resultTime xsd:dateTime)

# Data Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasIntervalMax> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasIntervalMax>)

DataPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasIntervalMax> xsd:double)

# Data Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasIntervalMin> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasIntervalMin>)

DataPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasIntervalMin> xsd:double)

# Data Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasStandardUncertainty> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasStandardUncertainty>)

DataPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasStandardUncertainty> xsd:float)

# Data Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCovarianceMatrix> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCovarianceMatrix>)

SubDataPropertyOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCovarianceMatrix> om-2:hasNumericalValue)
DataPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCovarianceMatrix> DataUnionOf(rdf:XMLLiteral <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TeXLiteral>))

# Data Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasMathMLexpression> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasMathMLexpression>)

SubDataPropertyOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasMathMLexpression> :hasLiteralExpression)
DataPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasMathMLexpression> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral>)

# Data Property: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasTeXExpression> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasTeXExpression>)

SubDataPropertyOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasTeXExpression> :hasLiteralExpression)
DataPropertyRange(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasTeXExpression> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TeXLiteral>)



############################
#   Classes
############################

# Class: :Accuracy (:Accuracy)

EquivalentClasses(:Accuracy <http://www.w3.org/ns/ssn/systems/Accuracy>)
SubClassOf(:Accuracy :QualityIndicator)
SubClassOf(:Accuracy ObjectAllValuesFrom(:hasMetric :AccuracyMetric))
SubClassOf(:Accuracy ObjectMinCardinality(1 :hasMetric :QualityMetric))

# Class: :AccuracyInterpretation (:AccuracyInterpretation)

SubClassOf(:AccuracyInterpretation :QualityInterpretation)
SubClassOf(:AccuracyInterpretation ObjectAllValuesFrom(:Interprets :AccuracyMetric))

# Class: :AccuracyMetric (:AccuracyMetric)

SubClassOf(:AccuracyMetric :QualityMetric)
SubClassOf(:AccuracyMetric ObjectAllValuesFrom(:hasInterpretation :AccuracyInterpretation))
SubClassOf(:AccuracyMetric ObjectMinCardinality(1 :hasInterpretation :QualityInterpretation))
SubClassOf(:AccuracyMetric ObjectMinCardinality(1 :isMetricOf <https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E1547>))

# Class: :BatteryInterpretation (:BatteryInterpretation)

SubClassOf(:BatteryInterpretation :QualityInterpretation)
SubClassOf(:BatteryInterpretation ObjectAllValuesFrom(:Interprets ObjectUnionOf(:BatteryLevelMetric <http://www.w3.org/ns/ssn/systems/BatteryLifetime>)))

# Class: :BatteryLevel (:BatteryLevel)

SubClassOf(:BatteryLevel :QualityIndicator)
SubClassOf(:BatteryLevel ObjectAllValuesFrom(:hasMetric :BatteryLevelMetric))

# Class: :BatteryLevelInterpretation (:BatteryLevelInterpretation)

SubClassOf(:BatteryLevelInterpretation :BatteryInterpretation)

# Class: :BatteryLevelMetric (:BatteryLevelMetric)

EquivalentClasses(:BatteryLevelMetric <http://www.w3.org/ns/ssn/systems/BatteryLifetime>)
SubClassOf(:BatteryLevelMetric :QualityMetric)
SubClassOf(:BatteryLevelMetric ObjectAllValuesFrom(:hasInterpretation :BatteryInterpretation))

# Class: :CalibrationData (:CalibrationData)

SubClassOf(:CalibrationData :QualityIndicator)

# Class: :Completeness (:Completeness)

SubClassOf(:Completeness :QualityIndicator)
SubClassOf(:Completeness ObjectAllValuesFrom(:hasMetric :CompletenessMetric))
SubClassOf(:Completeness ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/isPropertyOf> sosa:FeatureOfInterest))
SubClassOf(:Completeness ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/systems/hasSystemProperty>) <http://www.w3.org/ns/ssn/systems/SystemCapability>))
SubClassOf(:Completeness ObjectMinCardinality(1 ObjectInverseOf(<http://www.w3.org/ns/ssn/systems/hasSystemProperty>)))

# Class: :CompletenessInterpretation (:CompletenessInterpretation)

SubClassOf(:CompletenessInterpretation :QualityInterpretation)
SubClassOf(:CompletenessInterpretation ObjectAllValuesFrom(:Interprets :CompletenessMetric))

# Class: :CompletenessMetric (:CompletenessMetric)

SubClassOf(:CompletenessMetric :QualityMetric)
SubClassOf(:CompletenessMetric ObjectAllValuesFrom(:hasInterpretation :CompletenessInterpretation))
SubClassOf(:CompletenessMetric ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>))

# Class: :Consistency (:Consistency)

SubClassOf(:Consistency :QualityIndicator)
SubClassOf(:Consistency ObjectAllValuesFrom(:hasMetric :ConsistencyMetric))

# Class: :ConsistencyInterpretation (:ConsistencyInterpretation)

SubClassOf(:ConsistencyInterpretation :QualityInterpretation)
SubClassOf(:ConsistencyInterpretation ObjectAllValuesFrom(:Interprets :ConsistencyMetric))

# Class: :ConsistencyMetric (:ConsistencyMetric)

SubClassOf(:ConsistencyMetric :QualityMetric)
SubClassOf(:ConsistencyMetric ObjectAllValuesFrom(:hasInterpretation :ConsistencyInterpretation))
SubClassOf(:ConsistencyMetric ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>))

# Class: :LastCalibrationDate (:LastCalibrationDate)

SubClassOf(:LastCalibrationDate :CalibrationData)
SubClassOf(:LastCalibrationDate ObjectAllValuesFrom(:hasMetric :RecencyMetric))
SubClassOf(:LastCalibrationDate ObjectMinCardinality(1 :hasMetric :QualityMetric))
SubClassOf(:LastCalibrationDate ObjectExactCardinality(1 om-2:hasValue om-2:Date))

# Class: :MeasurementUncertainty (:MeasurementUncertainty)

EquivalentClasses(:MeasurementUncertainty <https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#Uncertainty>)
SubClassOf(:MeasurementUncertainty :QualityMetric)
SubClassOf(:MeasurementUncertainty <https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#Uncertainty>)
SubClassOf(:MeasurementUncertainty ObjectAllValuesFrom(:hasInterpretation :MeasurementUncertaintyInterpretation))
SubClassOf(:MeasurementUncertainty ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>))

# Class: :MeasurementUncertaintyInterpretation (:MeasurementUncertaintyInterpretation)

SubClassOf(:MeasurementUncertaintyInterpretation :QualityInterpretation)
SubClassOf(:MeasurementUncertaintyInterpretation ObjectAllValuesFrom(:Interprets :MeasurementUncertainty))

# Class: :QualityIndicator (:QualityIndicator)

AnnotationAssertion(rdfs:comment :QualityIndicator "A property of a sensor or system that can be used to assess quality of data")
SubClassOf(:QualityIndicator <http://www.w3.org/ns/ssn/systems/SystemProperty>)
SubClassOf(:QualityIndicator ObjectMinCardinality(1 :hasMetric :QualityMetric))

# Class: :QualityInterpretation (:QualityInterpretation)

AnnotationAssertion(rdfs:comment :QualityInterpretation "Interpretation of the result of applying a quality metric for a given indicator")
AnnotationAssertion(skos:example :QualityInterpretation "Low or sufficient battery level,

value out of range")
SubClassOf(:QualityInterpretation ObjectMinCardinality(1 :Interprets :QualityMetric))

# Class: :QualityMetric (:QualityMetric)

AnnotationAssertion(rdfs:comment :QualityMetric "A metric corresponding to a given quality indicator that assigns a value to it")
SubClassOf(:QualityMetric ObjectMinCardinality(1 :hasInterpretation :QualityInterpretation))
SubClassOf(:QualityMetric ObjectMinCardinality(1 :isMetricOf <https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E1547>))
SubClassOf(:QualityMetric ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>))

# Class: :RecencyInterpretation (:RecencyInterpretation)

SubClassOf(:RecencyInterpretation :QualityInterpretation)
SubClassOf(:RecencyInterpretation ObjectAllValuesFrom(:Interprets :RecencyMetric))

# Class: :RecencyMetric (:RecencyMetric)

SubClassOf(:RecencyMetric :QualityMetric)
SubClassOf(:RecencyMetric ObjectAllValuesFrom(:hasInterpretation :RecencyInterpretation))
SubClassOf(:RecencyMetric ObjectMinCardinality(0 :isMetricOf :CalibrationData))

# Class: :RemainingLifetimeInterpretation (:RemainingLifetimeInterpretation)

SubClassOf(:RemainingLifetimeInterpretation :BatteryInterpretation)

# Class: :SamplingRate (:SamplingRate)

SubClassOf(:SamplingRate :QualityIndicator)
SubClassOf(:SamplingRate <http://www.w3.org/ns/ssn/Property>)

# Class: :Timeliness (:Timeliness)

SubClassOf(:Timeliness :QualityIndicator)
SubClassOf(:Timeliness ObjectAllValuesFrom(:hasMetric :TimelinessMetric))
SubClassOf(:Timeliness ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/isPropertyOf> sosa:FeatureOfInterest))
SubClassOf(:Timeliness ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/systems/hasSystemProperty>) <http://www.w3.org/ns/ssn/systems/SystemCapability>))
SubClassOf(:Timeliness ObjectMinCardinality(1 ObjectInverseOf(<http://www.w3.org/ns/ssn/systems/hasSystemProperty>)))

# Class: :TimelinessInterpretation (:TimelinessInterpretation)

SubClassOf(:TimelinessInterpretation :QualityInterpretation)
SubClassOf(:TimelinessInterpretation ObjectAllValuesFrom(:Interprets :TimelinessMetric))

# Class: :TimelinessMetric (:TimelinessMetric)

SubClassOf(:TimelinessMetric :QualityMetric)
SubClassOf(:TimelinessMetric ObjectAllValuesFrom(:hasInterpretation :TimelinessInterpretation))

# Class: :restAPI (:restAPI)

AnnotationAssertion(rdfs:isDefinedBy :restAPI "https://en.wikipedia.org/wiki/Representational_state_transfer"^^rdfs:Literal)

# Class: sosa:ActuatableProperty (Actuatable Property)

AnnotationAssertion(rdfs:comment sosa:ActuatableProperty "An actuatable quality (property, characteristic) of a FeatureOfInterest."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:ActuatableProperty <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:ActuatableProperty sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:ActuatableProperty "Actuatable Property"@en)
AnnotationAssertion(skos:example sosa:ActuatableProperty "A window actuator acts by changing the state between a frame and a window. The ability of the window to be opened and closed is its ActuatableProperty."@en)
SubClassOf(sosa:ActuatableProperty <http://www.w3.org/ns/ssn/Property>)
SubClassOf(sosa:ActuatableProperty ObjectAllValuesFrom(sosa:isActedOnBy sosa:Actuation))

# Class: sosa:Actuation (sosa:Actuation)

AnnotationAssertion(rdfs:isDefinedBy sosa:Actuation <http://www.w3.org/ns/sosa/>)
SubClassOf(sosa:Actuation ObjectAllValuesFrom(sosa:actsOnProperty sosa:ActuatableProperty))
SubClassOf(sosa:Actuation ObjectAllValuesFrom(sosa:hasFeatureOfInterest sosa:FeatureOfInterest))
SubClassOf(sosa:Actuation ObjectAllValuesFrom(sosa:hasResult sosa:Result))
SubClassOf(sosa:Actuation ObjectAllValuesFrom(sosa:madeByActuator sosa:Actuator))
SubClassOf(sosa:Actuation ObjectAllValuesFrom(sosa:usedProcedure sosa:Procedure))
SubClassOf(sosa:Actuation ObjectMinCardinality(1 sosa:actsOnProperty))
SubClassOf(sosa:Actuation ObjectMinCardinality(1 sosa:hasResult))
SubClassOf(sosa:Actuation ObjectExactCardinality(1 sosa:hasFeatureOfInterest))
SubClassOf(sosa:Actuation ObjectExactCardinality(1 sosa:madeByActuator))
SubClassOf(sosa:Actuation DataExactCardinality(1 sosa:resultTime))

# Class: sosa:Actuator (sosa:Actuator)

AnnotationAssertion(rdfs:isDefinedBy sosa:Actuator <http://www.w3.org/ns/sosa/>)
SubClassOf(sosa:Actuator <http://www.w3.org/ns/ssn/System>)
SubClassOf(sosa:Actuator ObjectAllValuesFrom(sosa:madeActuation sosa:Actuation))
SubClassOf(sosa:Actuator ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/forProperty> sosa:ActuatableProperty))
SubClassOf(sosa:Actuator ObjectMinCardinality(1 <http://www.w3.org/ns/ssn/implements>))

# Class: sosa:FeatureOfInterest (Feature Of Interest)

AnnotationAssertion(rdfs:comment sosa:FeatureOfInterest "The thing whose property is being estimated or calculated in the course of an Observation to arrive at a Result or whose property is being manipulated by an Actuator, or which is being sampled or transformed in an act of Sampling."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:FeatureOfInterest <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:FeatureOfInterest sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:FeatureOfInterest "Feature Of Interest"@en)
AnnotationAssertion(skos:definition sosa:FeatureOfInterest "The thing whose property is being estimated or calculated in the course of an Observation to arrive at a Result or whose property is being manipulated by an Actuator, or which is being sampled or transformed in an act of Sampling."@en)
AnnotationAssertion(skos:example sosa:FeatureOfInterest "When measuring the height of a tree, the height is the observed ObservableProperty, 20m may be the Result of the Observation, and the tree is the FeatureOfInterest. A window is a FeatureOfInterest for an automatic window control Actuator."@en)
SubClassOf(sosa:FeatureOfInterest ObjectAllValuesFrom(sosa:hasSample sosa:Sample))
SubClassOf(sosa:FeatureOfInterest ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/hasProperty> <http://www.w3.org/ns/ssn/Property>))
SubClassOf(sosa:FeatureOfInterest ObjectMinCardinality(1 <http://www.w3.org/ns/ssn/hasProperty>))

# Class: sosa:OWLClassImpl_28ce790f_8a49_4961_93fa_6944a0d00033 (Sensor)

AnnotationAssertion(rdfs:comment sosa:OWLClassImpl_28ce790f_8a49_4961_93fa_6944a0d00033 "Device, agent (including humans), or software (simulation) involved in, or implementing, a Procedure. Sensors respond to a stimulus, e.g., a change in the environment, or input data composed from the results of prior Observations, and generate a Result. Sensors can be hosted by Platforms."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:OWLClassImpl_28ce790f_8a49_4961_93fa_6944a0d00033 sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:OWLClassImpl_28ce790f_8a49_4961_93fa_6944a0d00033 "Sensor"@en)
AnnotationAssertion(skos:definition sosa:OWLClassImpl_28ce790f_8a49_4961_93fa_6944a0d00033 "Device, agent (including humans), or software (simulation) involved in, or implementing, a Procedure. Sensors respond to a stimulus, e.g., a change in the environment, or input data composed from the results of prior Observations, and generate a Result. Sensors can be hosted by Platforms."@en)
AnnotationAssertion(skos:example sosa:OWLClassImpl_28ce790f_8a49_4961_93fa_6944a0d00033 "Accelerometers, gyroscopes, barometers, magnetometers, and so forth are Sensors that are typically mounted on a modern smart phone (which acts as Platform). Other examples of sensors include the human eyes."@en)

# Class: sosa:OWLClassImpl_469f12d2_b0e5_4426_91f4_16e9d18d8832 (Actuator)

AnnotationAssertion(rdfs:comment sosa:OWLClassImpl_469f12d2_b0e5_4426_91f4_16e9d18d8832 "A device that is used by, or implements, an (Actuation) Procedure that changes the state of the world."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:OWLClassImpl_469f12d2_b0e5_4426_91f4_16e9d18d8832 sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:OWLClassImpl_469f12d2_b0e5_4426_91f4_16e9d18d8832 "Actuator"@en)
AnnotationAssertion(skos:definition sosa:OWLClassImpl_469f12d2_b0e5_4426_91f4_16e9d18d8832 "A device that is used by, or implements, an (Actuation) Procedure that changes the state of the world."@en)
AnnotationAssertion(skos:example sosa:OWLClassImpl_469f12d2_b0e5_4426_91f4_16e9d18d8832 "A window actuator for automatic window control, i.e., opening or closing the window."@en)

# Class: sosa:OWLClassImpl_f8dae9b6_5094_43d9_a267_1f31d5992472 (Result)

AnnotationAssertion(rdfs:comment sosa:OWLClassImpl_f8dae9b6_5094_43d9_a267_1f31d5992472 "The Result of an Observation, Actuation, or act of Sampling. To store an observation's simple result value one can use the hasSimpleResult property."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:OWLClassImpl_f8dae9b6_5094_43d9_a267_1f31d5992472 sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:OWLClassImpl_f8dae9b6_5094_43d9_a267_1f31d5992472 "Result"@en)
AnnotationAssertion(skos:definition sosa:OWLClassImpl_f8dae9b6_5094_43d9_a267_1f31d5992472 "The Result of an Observation, Actuation, or act of Sampling. To store an observation's simple result value one can use the hasSimpleResult property."@en)
AnnotationAssertion(skos:example sosa:OWLClassImpl_f8dae9b6_5094_43d9_a267_1f31d5992472 "The value 20 as the height of a certain tree together with the unit, e.g., Meter."@en)

# Class: sosa:ObservableProperty (Observable Property)

AnnotationAssertion(rdfs:comment sosa:ObservableProperty "An observable quality (property, characteristic) of a FeatureOfInterest."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:ObservableProperty <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:ObservableProperty sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:ObservableProperty "Observable Property"@en)
AnnotationAssertion(skos:definition sosa:ObservableProperty "An observable quality (property, characteristic) of a FeatureOfInterest."@en)
AnnotationAssertion(skos:example sosa:ObservableProperty "The height of a tree, the depth of a water body, or the temperature of a surface are examples of observable properties, while the value of a classic car is not (directly) observable but asserted."@en)
SubClassOf(sosa:ObservableProperty <http://www.w3.org/ns/ssn/Property>)
SubClassOf(sosa:ObservableProperty ObjectAllValuesFrom(sosa:isObservedBy sosa:Sensor))
SubClassOf(sosa:ObservableProperty ObjectAllValuesFrom(ObjectInverseOf(sosa:observedProperty) sosa:Observation))
SubClassOf(sosa:ObservableProperty ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/isProxyFor>) <http://www.w3.org/ns/ssn/Stimulus>))

# Class: sosa:Observation (sosa:Observation)

AnnotationAssertion(rdfs:isDefinedBy sosa:Observation <http://www.w3.org/ns/sosa/>)
SubClassOf(sosa:Observation ObjectAllValuesFrom(sosa:hasFeatureOfInterest sosa:FeatureOfInterest))
SubClassOf(sosa:Observation ObjectAllValuesFrom(sosa:hasResult sosa:Result))
SubClassOf(sosa:Observation ObjectAllValuesFrom(sosa:madeBySensor sosa:Sensor))
SubClassOf(sosa:Observation ObjectAllValuesFrom(sosa:observedProperty sosa:ObservableProperty))
SubClassOf(sosa:Observation ObjectAllValuesFrom(sosa:usedProcedure sosa:Procedure))
SubClassOf(sosa:Observation ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/wasOriginatedBy> <http://www.w3.org/ns/ssn/Stimulus>))
SubClassOf(sosa:Observation ObjectMinCardinality(1 sosa:hasResult))
SubClassOf(sosa:Observation ObjectExactCardinality(1 sosa:hasFeatureOfInterest))
SubClassOf(sosa:Observation ObjectExactCardinality(1 sosa:madeBySensor))
SubClassOf(sosa:Observation ObjectExactCardinality(1 sosa:observedProperty))
SubClassOf(sosa:Observation ObjectExactCardinality(1 sosa:phenomenonTime))
SubClassOf(sosa:Observation ObjectExactCardinality(1 <http://www.w3.org/ns/ssn/wasOriginatedBy>))
SubClassOf(sosa:Observation DataExactCardinality(1 sosa:resultTime))

# Class: sosa:Platform (sosa:Platform)

AnnotationAssertion(rdfs:isDefinedBy sosa:Platform <http://www.w3.org/ns/sosa/>)
SubClassOf(sosa:Platform ObjectAllValuesFrom(sosa:hosts <http://www.w3.org/ns/ssn/System>))
SubClassOf(sosa:Platform ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/inDeployment> <http://www.w3.org/ns/ssn/Deployment>))

# Class: sosa:Procedure (sosa:Procedure)

AnnotationAssertion(rdfs:isDefinedBy sosa:Procedure <http://www.w3.org/ns/sosa/>)
SubClassOf(sosa:Procedure ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/hasInput> <http://www.w3.org/ns/ssn/Input>))
SubClassOf(sosa:Procedure ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/hasOutput> <http://www.w3.org/ns/ssn/Output>))
SubClassOf(sosa:Procedure ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/implementedBy> <http://www.w3.org/ns/ssn/System>))

# Class: sosa:Result (sosa:Result)

AnnotationAssertion(rdfs:isDefinedBy sosa:Result <http://www.w3.org/ns/sosa/>)
SubClassOf(sosa:Result ObjectMinCardinality(1 sosa:isResultOf))

# Class: sosa:Sample (Sample)

AnnotationAssertion(rdfs:comment sosa:Sample "A Sample is the result from an act of Sampling."@en)
AnnotationAssertion(rdfs:comment sosa:Sample "Physical samples are sometimes known as 'specimens'."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:Sample sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(skos:definition sosa:Sample "Feature which is intended to be representative of a FeatureOfInterest on which Observations may be made."@en)
AnnotationAssertion(skos:example sosa:Sample "A 'station' is essentially an identifiable locality where a sensor system or Procedure may be deployed and an observation made. In the context of the observation model, it connotes the 'world in the vicinity of the station', so the observed properties relate to the physical medium at the station, and not to any physical artifact such as a mooring, buoy, benchmark, monument, well, etc."@en)
AnnotationAssertion(skos:example sosa:Sample "A statistical sample is often designed to be characteristic of an entire population, so that observations can be made regarding the sample that provide a good estimate of the properties of the population."@en)
AnnotationAssertion(skos:note sosa:Sample "A transient sample, such as a ships-track or flight-line, might be identified and described, but is unlikely to be revisited exactly."@en)
SubClassOf(sosa:Sample sosa:FeatureOfInterest)
SubClassOf(sosa:Sample sosa:Result)
SubClassOf(sosa:Sample ObjectAllValuesFrom(sosa:isResultOf sosa:Sampling))
SubClassOf(sosa:Sample ObjectAllValuesFrom(sosa:isSampleOf sosa:FeatureOfInterest))
SubClassOf(sosa:Sample ObjectMinCardinality(1 sosa:isResultOf))
SubClassOf(sosa:Sample ObjectMinCardinality(1 sosa:isSampleOf))

# Class: sosa:Sampler (Sampler)

AnnotationAssertion(rdfs:comment sosa:Sampler "A device that is used by, or implements, a Sampling Procedure to create or transform one or more samples."@en)
AnnotationAssertion(rdfs:isDefinedBy sosa:Sampler <http://www.w3.org/ns/sosa/>)
AnnotationAssertion(rdfs:isDefinedBy sosa:Sampler sosa:OWLNamedIndividualImpl_51c882d3_408d_4166_b77e_c01d2efb27fd)
AnnotationAssertion(rdfs:label sosa:Sampler "Sampler"@en)
AnnotationAssertion(skos:definition sosa:Sampler "A device that is used by, or implements, a Sampling Procedure to create or transform one or more samples."@en)
AnnotationAssertion(skos:example sosa:Sampler "A ball mill, diamond drill, hammer, hypodermic syringe and needle, image Sensor or a soil auger can all act as sampling devices (i.e., be Samplers). However, sometimes the distinction between the Sampler and the Sensor is not evident, as they are packaged as a unit. A Sampler need not be a physical device."@en)
SubClassOf(sosa:Sampler <http://www.w3.org/ns/ssn/System>)
SubClassOf(sosa:Sampler ObjectAllValuesFrom(sosa:madeSampling sosa:Sampling))
SubClassOf(sosa:Sampler ObjectMinCardinality(1 <http://www.w3.org/ns/ssn/implements>))

# Class: sosa:Sampling (sosa:Sampling)

AnnotationAssertion(rdfs:isDefinedBy sosa:Sampling <http://www.w3.org/ns/sosa/>)
SubClassOf(sosa:Sampling ObjectAllValuesFrom(sosa:hasFeatureOfInterest sosa:FeatureOfInterest))
SubClassOf(sosa:Sampling ObjectAllValuesFrom(sosa:hasResult sosa:Sample))
SubClassOf(sosa:Sampling ObjectAllValuesFrom(sosa:madeBySampler sosa:Sampler))
SubClassOf(sosa:Sampling ObjectAllValuesFrom(sosa:usedProcedure sosa:Procedure))
SubClassOf(sosa:Sampling ObjectMinCardinality(1 sosa:hasResult))
SubClassOf(sosa:Sampling ObjectExactCardinality(1 sosa:hasFeatureOfInterest))
SubClassOf(sosa:Sampling ObjectExactCardinality(1 sosa:madeBySampler))
SubClassOf(sosa:Sampling DataExactCardinality(1 sosa:resultTime))

# Class: sosa:Sensor (sosa:Sensor)

AnnotationAssertion(rdfs:isDefinedBy sosa:Sensor <http://www.w3.org/ns/sosa/>)
SubClassOf(sosa:Sensor <http://www.w3.org/ns/ssn/System>)
SubClassOf(sosa:Sensor ObjectAllValuesFrom(sosa:madeObservation sosa:Observation))
SubClassOf(sosa:Sensor ObjectAllValuesFrom(sosa:observes sosa:ObservableProperty))
SubClassOf(sosa:Sensor ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/detects> <http://www.w3.org/ns/ssn/Stimulus>))
SubClassOf(sosa:Sensor ObjectMinCardinality(1 <http://www.w3.org/ns/ssn/implements>))

# Class: <http://www.w3.org/ns/ssn/Deployment> (Deployment)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/Deployment> "Describes the Deployment of one or more Systems for a particular purpose. Deployment may be done on a Platform."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/Deployment> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/Deployment> "Deployment"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/Deployment> "Describes the Deployment of one or more Systems for a particular purpose. Deployment may be done on a Platform."@en)
AnnotationAssertion(skos:example <http://www.w3.org/ns/ssn/Deployment> "For example, a temperature Sensor deployed on a wall, or a whole network of Sensors deployed for an Observation campaign."@en)
SubClassOf(<http://www.w3.org/ns/ssn/Deployment> ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/deployedOnPlatform> sosa:Platform))
SubClassOf(<http://www.w3.org/ns/ssn/Deployment> ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/deployedSystem> <http://www.w3.org/ns/ssn/System>))
SubClassOf(<http://www.w3.org/ns/ssn/Deployment> ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/forProperty> <http://www.w3.org/ns/ssn/Property>))

# Class: <http://www.w3.org/ns/ssn/Input> (Input)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/Input> "Any information that is provided to a Procedure for its use."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/Input> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/Input> "Input"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/Input> "Any information that is provided to a Procedure for its use."@en)
SubClassOf(<http://www.w3.org/ns/ssn/Input> ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/hasInput>) sosa:Procedure))
SubClassOf(<http://www.w3.org/ns/ssn/Input> ObjectMinCardinality(1 ObjectInverseOf(<http://www.w3.org/ns/ssn/hasInput>)))

# Class: <http://www.w3.org/ns/ssn/Output> (Output)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/Output> "Any information that is reported from a Procedure."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/Output> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/Output> "Output"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/Output> "Any information that is reported from a Procedure."@en)
SubClassOf(<http://www.w3.org/ns/ssn/Output> ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/hasOutput>) sosa:Procedure))
SubClassOf(<http://www.w3.org/ns/ssn/Output> ObjectMinCardinality(1 ObjectInverseOf(<http://www.w3.org/ns/ssn/hasOutput>)))

# Class: <http://www.w3.org/ns/ssn/Property> (Property)

AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/Property> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/Property> "Property"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/Property> "A quality of an entity. An aspect of an entity that is intrinsic to and cannot exist without the entity."@en)
SubClassOf(<http://www.w3.org/ns/ssn/Property> ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/isPropertyOf> sosa:FeatureOfInterest))

# Class: <http://www.w3.org/ns/ssn/Stimulus> (Stimulus)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/Stimulus> "An event in the real world that 'triggers' the Sensor. The properties associated to the Stimulus may be different to the eventual observed ObservableProperty. It is the event, not the object, that triggers the Sensor."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/Stimulus> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/Stimulus> "Stimulus"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/Stimulus> "An event in the real world that 'triggers' the Sensor. The properties associated to the Stimulus may be different to the eventual observed ObservableProperty. It is the event, not the object, that triggers the Sensor."@en)
SubClassOf(<http://www.w3.org/ns/ssn/Stimulus> ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/isProxyFor> sosa:ObservableProperty))
SubClassOf(<http://www.w3.org/ns/ssn/Stimulus> ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/detects>) sosa:Sensor))
SubClassOf(<http://www.w3.org/ns/ssn/Stimulus> ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/wasOriginatedBy>) sosa:Observation))

# Class: <http://www.w3.org/ns/ssn/System> (System)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/System> "System is a unit of abstraction for pieces of infrastructure that implement Procedures. A System may have components, its subsystems, which are other systems."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/System> <http://www.w3.org/ns/ssn/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/System> "System"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/System> "System is a unit of abstraction for pieces of infrastructure that implement Procedures. A System may have components, its subsystems, which are other systems."@en)
SubClassOf(<http://www.w3.org/ns/ssn/System> ObjectAllValuesFrom(sosa:isHostedBy sosa:Platform))
SubClassOf(<http://www.w3.org/ns/ssn/System> ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/hasDeployment> <http://www.w3.org/ns/ssn/Deployment>))
SubClassOf(<http://www.w3.org/ns/ssn/System> ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/hasSubSystem> <http://www.w3.org/ns/ssn/System>))
SubClassOf(<http://www.w3.org/ns/ssn/System> ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/implements> sosa:Procedure))
SubClassOf(<http://www.w3.org/ns/ssn/System> ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/systems/hasOperatingRange> <http://www.w3.org/ns/ssn/systems/OperatingRange>))
SubClassOf(<http://www.w3.org/ns/ssn/System> ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/systems/hasSurvivalRange> <http://www.w3.org/ns/ssn/systems/SurvivalRange>))
SubClassOf(<http://www.w3.org/ns/ssn/System> ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/systems/hasSystemCapability> <http://www.w3.org/ns/ssn/systems/SystemCapability>))
SubClassOf(<http://www.w3.org/ns/ssn/System> ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/hasSubSystem>) <http://www.w3.org/ns/ssn/System>))
SubClassOf(<http://www.w3.org/ns/ssn/System> ObjectMinCardinality(1 :hasIndicator :QualityIndicator))

# Class: <http://www.w3.org/ns/ssn/systems/Accuracy> (Accuracy)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/Accuracy> "The closeness of agreement between the Result of an Observation (resp. the command of an Actuation) and the true value of the observed ObservableProperty (resp. of the acted on ActuatableProperty) under the defined Conditions."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/Accuracy> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/Accuracy> "Accuracy"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/Accuracy> "The closeness of agreement between the Result of an Observation (resp. the command of an Actuation) and the true value of the observed ObservableProperty (resp. of the acted on ActuatableProperty) under the defined Conditions."@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/Accuracy> <http://www.w3.org/ns/ssn/systems/SystemProperty>)

# Class: <http://www.w3.org/ns/ssn/systems/ActuationRange> (Actuation Range)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/ActuationRange> "The set of values that the Actuator can return as the Result of an Actuation under the defined Conditions with the defined system properties."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/ActuationRange> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/ActuationRange> "Actuation Range"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/ActuationRange> "The set of values that the Actuator can return as the Result of an Actuation under the defined Conditions with the defined system properties."@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/ActuationRange> <http://www.w3.org/ns/ssn/systems/SystemProperty>)
SubClassOf(<http://www.w3.org/ns/ssn/systems/ActuationRange> ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/systems/hasSystemProperty>) ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/systems/hasSystemCapability>) sosa:Actuator)))

# Class: <http://www.w3.org/ns/ssn/systems/BatteryLifetime> (Battery Lifetime)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/BatteryLifetime> "Total useful life of a System's battery in the specified Conditions."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/BatteryLifetime> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/BatteryLifetime> "Battery Lifetime"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/BatteryLifetime> "Total useful life of a System's battery in the specified Conditions."@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/BatteryLifetime> <http://www.w3.org/ns/ssn/systems/SurvivalProperty>)

# Class: <http://www.w3.org/ns/ssn/systems/Condition> (Condition)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/Condition> "Used to specify ranges for qualities that act as conditions on a system/sensor's operation.  For example, wind speed of 10-60m/s may be used as the condition on a SystemProperty, for example, to state that a sensor has a particular accuracy in that condition."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/Condition> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/Condition> "Condition"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/Condition> "Used to specify ranges for qualities that act as conditions on a system/sensor's operation.  For example, wind speed of 10-60m/s may be used as the condition on a SystemProperty, for example, to state that a sensor has a particular accuracy in that condition."@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/Condition> <http://www.w3.org/ns/ssn/Property>)

# Class: <http://www.w3.org/ns/ssn/systems/DetectionLimit> (Detection Limit)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/DetectionLimit> "An observed value for which the probability of falsely claiming the absence of a component in a material is beta, given a probability alpha of falsely claiming its presence."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/DetectionLimit> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/DetectionLimit> "Detection Limit"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/DetectionLimit> "An observed value for which the probability of falsely claiming the absence of a component in a material is beta, given a probability alpha of falsely claiming its presence."@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/DetectionLimit> <http://www.w3.org/ns/ssn/systems/SystemProperty>)
SubClassOf(<http://www.w3.org/ns/ssn/systems/DetectionLimit> ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/systems/hasSystemProperty>) ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/systems/hasSystemCapability>) sosa:Sensor)))

# Class: <http://www.w3.org/ns/ssn/systems/Drift> (Drift)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/Drift> "As a Sensor Property: a continuous or incremental change in the reported values of Observations over time for an unchanging Property under the defined Conditions. 

      As an Actuator Property: a continuous or incremental change in the true value of the acted on ActuatableProperty over time for an unchanging command under the defined Conditions."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/Drift> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/Drift> "Drift"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/Drift> "As a Sensor Property: a continuous or incremental change in the reported values of Observations over time for an unchanging Property under the defined Conditions.

      As an Actuator Property: a continuous or incremental change in the true value of the acted on ActuatableProperty over time for an unchanging command under the defined Conditions."@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/Drift> <http://www.w3.org/ns/ssn/systems/SystemProperty>)

# Class: <http://www.w3.org/ns/ssn/systems/Frequency> (Frequency)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/Frequency> "The smallest possible time between one Observation, Actuation, or Sampling and the next, under the defined Conditions."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/Frequency> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/Frequency> "Frequency"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/Frequency> "The smallest possible time between one Observation, Actuation, or Sampling and the next, under the defined Conditions."@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/Frequency> <http://www.w3.org/ns/ssn/systems/SystemProperty>)

# Class: <http://www.w3.org/ns/ssn/systems/Latency> (Latency)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/Latency> "The time between a command for an Observation (resp. Actuation) and the Sensor providing a Result (resp. the Actuator operating the Actuation), under the defined Conditions."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/Latency> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/Latency> "Latency"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/Latency> "The time between a command for an Observation (resp. Actuation) and the Sensor providing a Result (resp. the Actuator operating the Actuation), under the defined Conditions."@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/Latency> <http://www.w3.org/ns/ssn/systems/SystemProperty>)

# Class: <http://www.w3.org/ns/ssn/systems/MaintenanceSchedule> (Maintenance Schedule)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/MaintenanceSchedule> "Schedule of maintenance for a System in the specified Conditions."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/MaintenanceSchedule> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/MaintenanceSchedule> "Maintenance Schedule"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/MaintenanceSchedule> "Schedule of maintenance for a System in the specified Conditions."@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/MaintenanceSchedule> <http://www.w3.org/ns/ssn/systems/OperatingProperty>)

# Class: <http://www.w3.org/ns/ssn/systems/MeasurementRange> (Measurement Range)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/MeasurementRange> "The set of values that the Sensor can return as the Result of an Observation under the defined Conditions."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/MeasurementRange> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/MeasurementRange> "Measurement Range"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/MeasurementRange> "The set of values that the Sensor can return as the Result of an Observation under the defined Conditions."@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/MeasurementRange> <http://www.w3.org/ns/ssn/systems/SystemProperty>)
SubClassOf(<http://www.w3.org/ns/ssn/systems/MeasurementRange> ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/systems/hasSystemProperty>) ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/systems/hasSystemCapability>) sosa:Sensor)))

# Class: <http://www.w3.org/ns/ssn/systems/OperatingPowerRange> (Operating Power Range)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/OperatingPowerRange> "Power range in which a System is expected to operate in the specified Conditions."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/OperatingPowerRange> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/OperatingPowerRange> "Operating Power Range"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/OperatingPowerRange> "Power range in which a System is expected to operate in the specified Conditions."@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/OperatingPowerRange> <http://www.w3.org/ns/ssn/systems/OperatingProperty>)

# Class: <http://www.w3.org/ns/ssn/systems/OperatingProperty> (Operating Property)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/OperatingProperty> "An identifiable characteristic that represents how the System operates under the specified Conditions. May describe power ranges, power sources, standard configurations, attachments and the like."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/OperatingProperty> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/OperatingProperty> "Operating Property"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/OperatingProperty> "An identifiable characteristic that represents how the System operates under the specified Conditions. May describe power ranges, power sources, standard configurations, attachments and the like."@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/OperatingProperty> <http://www.w3.org/ns/ssn/Property>)
SubClassOf(<http://www.w3.org/ns/ssn/systems/OperatingProperty> ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/systems/hasOperatingProperty>) <http://www.w3.org/ns/ssn/systems/OperatingRange>))
SubClassOf(<http://www.w3.org/ns/ssn/systems/OperatingProperty> ObjectMinCardinality(1 ObjectInverseOf(<http://www.w3.org/ns/ssn/systems/hasOperatingProperty>)))

# Class: <http://www.w3.org/ns/ssn/systems/OperatingRange> (Operating Range)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/OperatingRange> "Describes normal OperatingProperties of a System under some specified Conditions. For example, to the power requirement or maintenance schedule of a System under a specified temperature range.

    In the absence of OperatingProperties, simply describes the Conditions in which a System is expected to operate.

    The System continues to operate as defined using SystemCapability. If, however, the SurvivalRange is violated, the System is 'damaged' and SystemCapability specifications may no longer hold."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/OperatingRange> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/OperatingRange> "Operating Range"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/OperatingRange> "Describes normal OperatingProperties of a System under some specified Conditions. For example, to the power requirement or maintenance schedule of a System under a specified temperature range.

    In the absence of OperatingProperties, it simply describes the Conditions in which a System is expected to operate.

    The System continues to operate as defined using SystemCapability. If, however, the SurvivalRange is violated, the System is 'damaged' and SystemCapability specifications may no longer hold."@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/OperatingRange> <http://www.w3.org/ns/ssn/Property>)
SubClassOf(<http://www.w3.org/ns/ssn/systems/OperatingRange> ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/systems/hasOperatingProperty> <http://www.w3.org/ns/ssn/systems/OperatingProperty>))
SubClassOf(<http://www.w3.org/ns/ssn/systems/OperatingRange> ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/systems/inCondition> <http://www.w3.org/ns/ssn/systems/Condition>))
SubClassOf(<http://www.w3.org/ns/ssn/systems/OperatingRange> ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/systems/hasOperatingRange>) <http://www.w3.org/ns/ssn/System>))
SubClassOf(<http://www.w3.org/ns/ssn/systems/OperatingRange> ObjectMinCardinality(1 <http://www.w3.org/ns/ssn/systems/inCondition>))

# Class: <http://www.w3.org/ns/ssn/systems/Precision> (Precision)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/Precision> "As a Sensor Property: the closeness of agreement between replicate Observations on an unchanged or similar Property value: i.e., a measure of a Sensor's ability to consistently reproduce an Observation, under the defined Conditions.

      As an Actuator Property: the closeness of agreement between replicate Actuations for an unchanged or similar command: i.e., a measure of an Actuator's ability to consistently reproduce an Actuation, under the defined Conditions."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/Precision> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/Precision> "Precision"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/Precision> "As a Sensor Property: the closeness of agreement between replicate Observations on an unchanged or similar Property value: i.e., a measure of a Sensor's ability to consistently reproduce an Observation, under the defined Conditions.

      As an Actuator Property: the closeness of agreement between replicate Actuations for an unchanged or similar command: i.e., a measure of an Actuator's ability to consistently reproduce an Actuation, under the defined Conditions."@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/Precision> <http://www.w3.org/ns/ssn/systems/SystemProperty>)

# Class: <http://www.w3.org/ns/ssn/systems/Resolution> (Resolution)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/Resolution> "As a Sensor Property: the smallest difference in the value of a ObservableProperty being observed that would result in perceptably different values of Observation Results, under the defined Conditions. 

      As an Actuator Property: the smallest difference in the value of an Actuation command that would result in a value change of the ActuatableProperty being acted on, under the defined Conditions."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/Resolution> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/Resolution> "Resolution"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/Resolution> "As a Sensor Property: the smallest difference in the value of a ObservableProperty being observed that would result in perceptably different values of Observation Results, under the defined Conditions.

      As an Actuator Property: the smallest difference in the value of an Actuation command that would result in a value change of the ActuatableProperty being acted on, under the defined Conditions."@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/Resolution> <http://www.w3.org/ns/ssn/systems/SystemProperty>)

# Class: <http://www.w3.org/ns/ssn/systems/ResponseTime> (Response Time)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/ResponseTime> "As a Sensor Property: the time between a (step) change in the value of an observed ObservableProperty and a Sensor (possibly with specified error) 'settling' on an observed value, under the defined Conditions.

      As an Actuator property: the time between a (step) change in the command of an Actuator and the 'settling' of the value of the acted on ActuatableProperty, under the defined Conditions."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/ResponseTime> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/ResponseTime> "Response Time"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/ResponseTime> "As a Sensor Property: the time between a (step) change in the value of an observed ObservableProperty and a Sensor (possibly with specified error) 'settling' on an observed value, under the defined Conditions.

      As an Actuator property: the time between a (step) change in the command of an Actuator and the 'settling' of the value of the acted on ActuatableProperty, under the defined Conditions."@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/ResponseTime> <http://www.w3.org/ns/ssn/systems/SystemProperty>)

# Class: <http://www.w3.org/ns/ssn/systems/Selectivity> (Selectivity)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/Selectivity> "As a Sensor Property: Selectivity is a Property of a Sensor whereby it provides observed values for one or more ObservableProperties such that the Results for each ObservableProperty are independent of other Properties in the FeatureOfInterest being investigated,  under the defined Conditions.

      As an Actuator Property: Selectivity is a Property of an Actuator whereby it acts on one or more ActuatableProperties such as the Results for each ActuatableProperty are independent of other Properties in the FeatureOfInterest being acted on, under the defined Conditions."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/Selectivity> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/Selectivity> "Selectivity"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/Selectivity> "As a Sensor Property: Selectivity is a Property of a Sensor whereby it provides observed values for one or more ObservableProperties such that the Results for each ObservableProperty are independent of other Properties in the FeatureOfInterest being investigated,  under the defined Conditions.

      As an Actuator Property: Selectivity is a Property of an Actuator whereby it acts on one or more ActuatableProperties such as the Results for each ActuatableProperty are independent of other Properties in the FeatureOfInterest being acted on, under the defined Conditions."@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/Selectivity> <http://www.w3.org/ns/ssn/Property>)
SubClassOf(<http://www.w3.org/ns/ssn/systems/Selectivity> <http://www.w3.org/ns/ssn/systems/SystemProperty>)

# Class: <http://www.w3.org/ns/ssn/systems/Sensitivity> (Sensitivity)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/Sensitivity> "As a Sensor Property: Sensitivity is the quotient of the change in a Result of Observation and the corresponding change in a value of an ObservableProperty being observed, under the defined Conditions."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/Sensitivity> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/Sensitivity> "Sensitivity"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/Sensitivity> "As a Sensor Property: Sensitivity is the quotient of the change in a Result of Observation and the corresponding change in a value of an ObservableProperty being observed, under the defined Conditions.")
SubClassOf(<http://www.w3.org/ns/ssn/systems/Sensitivity> <http://www.w3.org/ns/ssn/systems/SystemProperty>)

# Class: <http://www.w3.org/ns/ssn/systems/SurvivalProperty> (Survival Property)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/SurvivalProperty> "An identifiable characteristic that represents the extent of the System's useful life under the specified Conditions. May describe for example total battery life or number of recharges, or, for Sensors that are used only a fixed number of times, the number of observations that can be made before the sensing capability is depleted."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/SurvivalProperty> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/SurvivalProperty> "Survival Property"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/SurvivalProperty> "An identifiable characteristic that represents the extent of the System's useful life under the specified Conditions. May describe for example total battery life or number of recharges, or, for Sensors that are used only a fixed number of times, the number of observations that can be made before the sensing capability is depleted."@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/SurvivalProperty> <http://www.w3.org/ns/ssn/Property>)
SubClassOf(<http://www.w3.org/ns/ssn/systems/SurvivalProperty> ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/systems/hasSurvivalProperty>) <http://www.w3.org/ns/ssn/systems/SurvivalRange>))
SubClassOf(<http://www.w3.org/ns/ssn/systems/SurvivalProperty> ObjectMinCardinality(1 ObjectInverseOf(<http://www.w3.org/ns/ssn/systems/hasSurvivalProperty>)))

# Class: <http://www.w3.org/ns/ssn/systems/SurvivalRange> (Survival Range)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/SurvivalRange> "Describes survival capabilities of a System under some specified Conditions. For example, to the lifetime of a System under a specified temperature range.

    In the absence of SurvivalProperties, simply describes the Conditions a System can be exposed to without damage. For example, the temperature range a System can withstand before being considered damaged.

    The System continues to operate as defined using SystemCapability. If, however, the OperatingProperty is violated, the System is operating 'out of operating range' and SystemCapability specifications may no longer hold."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/SurvivalRange> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/SurvivalRange> "Survival Range"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/SurvivalRange> "Describes SurvivalProperties of a System under some specified Conditions. For example, the lifetime of a System under a specified temperature range.

    In the absence of SurvivalProperties, simply describes the Conditions a System can be exposed to without damage. For example, the temperature range a System can withstand before being considered damaged.

    The System continues to operate as defined using SystemCapability. If, however, the SurvivalRange is violated, the System is 'damaged' and SystemCapability specifications may no longer hold."@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/SurvivalRange> <http://www.w3.org/ns/ssn/Property>)
SubClassOf(<http://www.w3.org/ns/ssn/systems/SurvivalRange> ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/systems/hasSurvivalProperty> <http://www.w3.org/ns/ssn/systems/SurvivalProperty>))
SubClassOf(<http://www.w3.org/ns/ssn/systems/SurvivalRange> ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/systems/inCondition> <http://www.w3.org/ns/ssn/systems/Condition>))
SubClassOf(<http://www.w3.org/ns/ssn/systems/SurvivalRange> ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/systems/hasSurvivalRange>) <http://www.w3.org/ns/ssn/System>))
SubClassOf(<http://www.w3.org/ns/ssn/systems/SurvivalRange> ObjectMinCardinality(1 <http://www.w3.org/ns/ssn/systems/inCondition>))

# Class: <http://www.w3.org/ns/ssn/systems/SystemCapability> (System Capability)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/SystemCapability> "Describes normal measurement, actuation, sampling properties such as accuracy, range, precision, etc. of a System under some specified Conditions such as a temperature range.

    The capabilities specified here are those that affect the primary purpose of the System, while those in OperatingRange represent the system's normal operating environment, including conditions that don't affect the observations or the actuations."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/SystemCapability> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/SystemCapability> "System Capability"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/SystemCapability> "Describes normal measurement, actuation, sampling properties such as accuracy, range, precision, etc. of a System under some specified Conditions such as a temperature range.

    The capabilities specified here are those that affect the primary purpose of the System, while those in OperatingRange represent the system's normal operating environment, including conditions that don't affect the observations or the actuations."@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/SystemCapability> <http://www.w3.org/ns/ssn/Property>)
SubClassOf(<http://www.w3.org/ns/ssn/systems/SystemCapability> ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/forProperty> <http://www.w3.org/ns/ssn/Property>))
SubClassOf(<http://www.w3.org/ns/ssn/systems/SystemCapability> ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/systems/hasSystemProperty> <http://www.w3.org/ns/ssn/systems/SystemProperty>))
SubClassOf(<http://www.w3.org/ns/ssn/systems/SystemCapability> ObjectAllValuesFrom(<http://www.w3.org/ns/ssn/systems/inCondition> <http://www.w3.org/ns/ssn/systems/Condition>))
SubClassOf(<http://www.w3.org/ns/ssn/systems/SystemCapability> ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/systems/hasSystemCapability>) <http://www.w3.org/ns/ssn/System>))
SubClassOf(<http://www.w3.org/ns/ssn/systems/SystemCapability> ObjectMinCardinality(1 <http://www.w3.org/ns/ssn/systems/inCondition>))

# Class: <http://www.w3.org/ns/ssn/systems/SystemLifetime> (System Lifetime)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/SystemLifetime> "Total useful life of a System (expressed as total life since manufacture, time in use, number of operations, etc.) in the specified Conditions."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/SystemLifetime> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/SystemLifetime> "System Lifetime"@en)
AnnotationAssertion(skos:definition <http://www.w3.org/ns/ssn/systems/SystemLifetime> "Total useful life of a System (expressed as total life since manufacture, time in use, number of operations, etc.) in the specified Conditions."@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/SystemLifetime> <http://www.w3.org/ns/ssn/systems/SurvivalProperty>)
SubClassOf(<http://www.w3.org/ns/ssn/systems/SystemLifetime> ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/systems/hasSurvivalProperty>) <http://www.w3.org/ns/ssn/systems/SurvivalRange>))

# Class: <http://www.w3.org/ns/ssn/systems/SystemProperty> (System Property)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/ssn/systems/SystemProperty> "An identifiable and observable characteristic that represents the System's ability to operate its primary purpose: a Sensor to make Observations, an Actuator to make Actuations, or a Sampler to make Samplings."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://www.w3.org/ns/ssn/systems/SystemProperty> <http://www.w3.org/ns/ssn/systems/>)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/ssn/systems/SystemProperty> "System Property"@en)
SubClassOf(<http://www.w3.org/ns/ssn/systems/SystemProperty> <http://www.w3.org/ns/ssn/Property>)
SubClassOf(<http://www.w3.org/ns/ssn/systems/SystemProperty> ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/systems/hasSystemProperty>) <http://www.w3.org/ns/ssn/systems/SystemCapability>))
SubClassOf(<http://www.w3.org/ns/ssn/systems/SystemProperty> ObjectMinCardinality(1 ObjectInverseOf(<http://www.w3.org/ns/ssn/systems/hasSystemProperty>)))

# Class: <https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E1995> (Representation of polynomial)

EquivalentClasses(<https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E1995> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Polynomial>)

# Class: <https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E2822> (система обыкновенных дифференциальных уравнений)

EquivalentClasses(<https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E2822> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearOrdinaryDifferentialEquation>)

# Class: <https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E34> (элемент математического знания)

EquivalentClasses(<https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E34> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlCalibrationModel> (Mathematical Calibration Model)

AnnotationAssertion(rdfs:isDefinedBy <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlCalibrationModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#>)
AnnotationAssertion(rdfs:label <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlCalibrationModel> "Mathematical Calibration Model"@en)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlEquationModel> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlEquationModel>)

AnnotationAssertion(rdfs:isDefinedBy <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlEquationModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlEquationModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlCalibrationModel>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlEquationModel> ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasEquation>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlEquationModel> ObjectMinCardinality(0 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasParameter>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlEquationModel> ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlhasVariable>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlVariable> (Define a variable.)

AnnotationAssertion(rdfs:isDefinedBy <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlVariable> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#>)
AnnotationAssertion(rdfs:label <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlVariable> "Define a variable."@en)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttlVariable> om-2:Quantity)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#ExpandedUncertainty> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#ExpandedUncertainty>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#ExpandedUncertainty> DataExactCardinality(1 om-2:hasNumericalValue xsd:double))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#MeasureWithUncertainty> (Measure with Uncertainty)

AnnotationAssertion(rdfs:label <https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#MeasureWithUncertainty> "Measure with Uncertainty"@en)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#MeasureWithUncertainty> om-2:Measure)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#MeasureWithUncertainty> ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasUncertainty> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#Uncertainty>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#Uncertainty> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#Uncertainty>)

AnnotationAssertion(rdfs:comment <https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#Uncertainty> "Uncertainty object as specified in the D-SI standard"@en)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#Uncertainty> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#Equation> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#Equation>)

AnnotationAssertion(rdfs:isDefinedBy <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#Equation> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#Parameter> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#Parameter>)

EquivalentClasses(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#Parameter> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Parameter>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#AnalyticDomain> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#AnalyticDomain>)

AnnotationAssertion(rdfs:comment <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#AnalyticDomain> "The domain in which the transfer behavior is represented/analyzed"@en)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>)

AnnotationAssertion(rdfs:seeAlso <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array> <https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E1687>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array> om-2:Measure)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array> <https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E34>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array> DataAllValuesFrom(om-2:hasNumericalValue DataUnionOf(rdf:XMLLiteral <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TeXLiteral>)))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ArrayWithUncertainty> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ArrayWithUncertainty>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ArrayWithUncertainty> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#MeasureWithUncertainty>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ArrayWithUncertainty> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ArrayWithUncertainty> ObjectAllValuesFrom(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasUncertainty> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MultivariateUncertainty>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ArrayWithUncertainty> ObjectMinCardinality(0 om-2:hasValue om-2:Measure))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ArrayWithUncertainty> DataAllValuesFrom(om-2:hasNumericalValue DataUnionOf(rdf:XMLLiteral <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TeXLiteral>)))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#BandPass> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#BandPass>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#BandPass> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyBehavior>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#BandStop> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#BandStop>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#BandStop> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyBehavior>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Bessel> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Bessel>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Bessel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FilterType>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Bessel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Polynomial>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Butterworth> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Butterworth>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Butterworth> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FilterType>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Chebyshev> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Chebyshev>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Chebyshev> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FilterType>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Chebyshev> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Polynomial>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Continuous> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Continuous>)

AnnotationAssertion(rdfs:comment <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Continuous> "The values along a dimension are represented by continuous points."@en)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Continuous> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DimensionStructure>)
DisjointClasses(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Continuous> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Discrete>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ContinuousImpulseResponseModel> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ContinuousImpulseResponseModel>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ContinuousImpulseResponseModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ImpulseResponseModel>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ContinuousImpulseResponseModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Dynamic>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ContinuousImpulseResponseModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isDefinedInDomain> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TimeDomain>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ContinuousImpulseResponseModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ContinuousImpulseResponseModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isOfSystemType> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearSystem>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Discrete> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Discrete>)

AnnotationAssertion(rdfs:comment <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Discrete> "The values along a dimension are represented by discrete points."@en)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Discrete> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DimensionStructure>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Dynamic> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Dynamic>)

AnnotationAssertion(rdfs:comment <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Dynamic> "System response can depend on the history of input values."@en)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Dynamic> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TemporalBehavior>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#EllipsoidalRegion> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#EllipsoidalRegion>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#EllipsoidalRegion> :QualityMetric)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#EllipsoidalRegion> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#Uncertainty>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#EllipsoidalRegion> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MultivariateUncertainty>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#EllipsoidalRegion> ObjectAllValuesFrom(:hasInterpretation :MeasurementUncertaintyInterpretation))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#EllipsoidalRegion> ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Elliptic> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Elliptic>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Elliptic> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FilterType>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Elliptic> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#EllipticRationalFunction>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#EllipticRationalFunction> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#EllipticRationalFunction>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#EllipticRationalFunction> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#RationalFraction>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#EllipticRationalFunction> ObjectMinCardinality(0 om-2:hasValue om-2:Measure))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FilterType> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FilterType>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FilterType> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TransferModel>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FilterType> ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasValueStructure> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DimensionStructure>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FilterType> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyBehavior>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FilterType> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isDefinedInDomain> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyDomain>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FiniteImpulseResponseModel> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FiniteImpulseResponseModel>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FiniteImpulseResponseModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FilterType>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FiniteImpulseResponseModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ImpulseResponseModel>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FiniteImpulseResponseModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyBehavior>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FiniteImpulseResponseModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isDefinedInDomain> ObjectUnionOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyDomain> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TimeDomain>)))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FiniteImpulseResponseModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> ObjectUnionOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearDifferenceEquation> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Polynomial>)))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyBehavior> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyBehavior>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyBehavior> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#QualitativeBehavior>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyDomain> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyDomain>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyDomain> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#AnalyticDomain>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencySpectrum> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencySpectrum>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencySpectrum> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencySpectrum> ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFrequencyArray> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencySpectrum> ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasValueArray> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#HighPass> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#HighPass>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#HighPass> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyBehavior>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ImpulseResponseModel> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ImpulseResponseModel>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ImpulseResponseModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TransferModel>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ImpulseResponseModel> ObjectAllValuesFrom(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isDefinedInDomain> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#AnalyticDomain>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ImpulseResponseModel> ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#QualitativeBehavior>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ImpulseResponseModel> ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ImpulseResponseModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isDefinedInDomain> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyDomain>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ImpulseResponseModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isOfSystemType> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearSystem>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#InfiniteImpulseResponseModel> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#InfiniteImpulseResponseModel>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#InfiniteImpulseResponseModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ImpulseResponseModel>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#InfiniteImpulseResponseModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isDefinedInDomain> ObjectUnionOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyDomain> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TimeDomain>)))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#InfiniteImpulseResponseModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> ObjectUnionOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearDifferenceEquation> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#RationalFraction>)))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LTISystem> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LTISystem>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LTISystem> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearSystem>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearAffineModel> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearAffineModel>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearAffineModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TransferModel>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearAffineModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Static>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearAffineModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isDefinedInDomain> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TimeDomain>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearAffineModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearAffineModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isOfSystemType> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NonlinearSystem>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearDifferenceEquation> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearDifferenceEquation>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearDifferenceEquation> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearDifferenceEquation> ObjectExactCardinality(2 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCoefficients> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearOrdinaryDifferentialEquation> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearOrdinaryDifferentialEquation>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearOrdinaryDifferentialEquation> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearOrdinaryDifferentialEquation> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCoefficients> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearStateSpaceModel> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearStateSpaceModel>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearStateSpaceModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceModel>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearStateSpaceModel> ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#QualitativeBehavior>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearStateSpaceModel> ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearStateSpaceModel> ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceMatrixNotation>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearStateSpaceModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Dynamic>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearStateSpaceModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isDefinedInDomain> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyDomain>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearStateSpaceModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isDefinedInDomain> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TimeDomain>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearStateSpaceModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isOfSystemType> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearSystem>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearSystem> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearSystem>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearSystem> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#SystemType>)
DisjointClasses(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearSystem> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NonlinearSystem>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LowPass> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LowPass>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LowPass> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyBehavior>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject> <https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E34>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject> ObjectMinCardinality(0 om-2:hasValue om-2:Measure))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MultivariateUncertainty> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MultivariateUncertainty>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MultivariateUncertainty> :MeasurementUncertainty)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MultivariateUncertainty> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#Uncertainty>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NonLinearStateSpaceModel> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NonLinearStateSpaceModel>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NonLinearStateSpaceModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceModel>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NonLinearStateSpaceModel> ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NonLinearStateSpaceModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isDefinedInDomain> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyDomain>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NonLinearStateSpaceModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isOfSystemType> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearSystem>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NonLinearStateSpaceModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isOfSystemType> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NonlinearSystem>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NonlinearSystem> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NonlinearSystem>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NonlinearSystem> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#SystemType>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Polynomial> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Polynomial>)

AnnotationAssertion(rdfs:comment <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Polynomial> "An expression consisting of variables (also called indeterminates) and coefficients, that involves only the operations of addition, subtraction, multiplication, and non-negative integer exponentiation of variables"@en)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Polynomial> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Polynomial> ObjectAllValuesFrom(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCoefficients> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Polynomial> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasPolynomialRoots> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#RationalFraction> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#RationalFraction>)

AnnotationAssertion(rdfs:comment <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#RationalFraction> "A rational fraction given by its numerator- and denominator-polynomial."@en)
AnnotationAssertion(rdfs:seeAlso <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#RationalFraction> <https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E1603>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#RationalFraction> <https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E34>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#RationalFraction> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#RationalFraction> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasDenominator> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Polynomial>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#RationalFraction> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasNumerator> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Polynomial>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#RectangularRegion> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#RectangularRegion>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#RectangularRegion> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MultivariateUncertainty>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceMatrixNotation> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceMatrixNotation>)

AnnotationAssertion(rdfs:comment <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceMatrixNotation> "Depending on chosen time-dimension structure (continuous / discrete) the matrices represent a system of differential or difference equations. 

continuous:
x_dot = A*x + B*u
y = C*x + D*u

discrete:
x[n+1] = A*x[n] + B*u[n]
y[n] = C*x[n] + D*u[n]

with internal state x, state's time derivate x_dot, input u, output y."@en)
AnnotationAssertion(rdfs:comment <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceMatrixNotation> "State Space Model represented by its system Matrix A, input matrix B, output matrix C and feedthrough matrix D."@en)
AnnotationAssertion(rdfs:seeAlso <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceMatrixNotation> <https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E2823>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceMatrixNotation> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceMatrixNotation> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasFeedthroughMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceMatrixNotation> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasInputMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceMatrixNotation> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasOutputMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceMatrixNotation> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasSystemMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceModel> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceModel>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TransferModel>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Dynamic>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StateSpaceModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isDefinedInDomain> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TimeDomain>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Static> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Static>)

AnnotationAssertion(rdfs:comment <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Static> "System response is only dependent on the last input value."@en)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Static> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TemporalBehavior>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StepResponseModel> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StepResponseModel>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StepResponseModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TransferModel>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StepResponseModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Dynamic>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StepResponseModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isDefinedInDomain> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TimeDomain>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StepResponseModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#StepResponseModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isOfSystemType> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearSystem>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TemporalBehavior> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TemporalBehavior>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TemporalBehavior> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#QualitativeBehavior>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TimeDomain> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TimeDomain>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TimeDomain> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#AnalyticDomain>)

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TimeSeries> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TimeSeries>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TimeSeries> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TimeSeries> ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasValueArray> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TimeSeries> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasTimeArray> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TransferModel> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TransferModel>)

AnnotationAssertion(rdfs:seeAlso <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TransferModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#EquationModel>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TransferModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FilterType>)
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TransferModel> ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#QualitativeBehavior>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TransferModel> ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasValueStructure> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DimensionStructure>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TransferModel> ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>))
SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#TransferModel> ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isOfSystemType> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LinearSystem>))

# Class: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#UnivariateUncertainty> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#UnivariateUncertainty>)

SubClassOf(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#UnivariateUncertainty> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#Uncertainty>)


############################
#   Named Individuals
############################

# Individual: :MPUBatteryDataSource (:MPUBatteryDataSource)

ClassAssertion(:restAPI :MPUBatteryDataSource)
DataPropertyAssertion(:getRequest :MPUBatteryDataSource "http://localhost/database?system=MPU9250&data=battery"^^rdf:HTML)

# Individual: :MPUBatteryIndicator (:MPUBatteryIndicator)

ClassAssertion(:BatteryLevel :MPUBatteryIndicator)
ObjectPropertyAssertion(:hasMetric :MPUBatteryIndicator :MPUBatteryMetric)

# Individual: :MPUBatteryInterpretation (:MPUBatteryInterpretation)

ClassAssertion(:QualityInterpretation :MPUBatteryInterpretation)
ObjectPropertyAssertion(:Interprets :MPUBatteryInterpretation :MPUBatteryMetric)
ObjectPropertyAssertion(:inputHasUnit :MPUBatteryInterpretation <https://raw.githubusercontent.com/HajoRijgersberg/OM/master/om-2.0.rdf#Percentage>)
DataPropertyAssertion(:isCriticalIf :MPUBatteryInterpretation "<apply><lt/><ci>output</ci><cn>15</cn></apply>"^^<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral>)
DataPropertyAssertion(:isSufficientIf :MPUBatteryInterpretation "<apply><gt/><ci>output</ci><cn>30</cn></apply>"^^<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral>)

# Individual: :MPUBatteryMathObject (:MPUBatteryMathObject)

ClassAssertion(<https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E1908> :MPUBatteryMathObject)
DataPropertyAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasMathMLexpression> :MPUBatteryMathObject "<apply><eq/><ci>output</ci><apply><times/>100<ci>input</ci></apply></apply>"^^<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral>)

# Individual: :MPUBatteryMetric (:MPUBatteryMetric)

ClassAssertion(:BatteryLevelMetric :MPUBatteryMetric)
ObjectPropertyAssertion(:hasInterpretation :MPUBatteryMetric :MPUBatteryInterpretation)
ObjectPropertyAssertion(:isMetricOf :MPUBatteryMetric :MPUBatteryIndicator)
ObjectPropertyAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> :MPUBatteryMetric :MPUBatteryMathObject)

# Individual: :MPUCalibrationDataSource (:MPUCalibrationDataSource)

ClassAssertion(:restAPI :MPUCalibrationDataSource)
DataPropertyAssertion(:getRequest :MPUCalibrationDataSource "http://localhost/database?system=MPU9250_xaxis&data=calibration"^^rdf:HTML)

# Individual: :MPUCalibrationIndicator (:MPUCalibrationIndicator)

ClassAssertion(:CalibrationData :MPUCalibrationIndicator)
ObjectPropertyAssertion(:hasMetric :MPUCalibrationIndicator :MPURecencyMetric)
ObjectPropertyAssertion(:hasMetric :MPUCalibrationIndicator :MPUUncertaintyMetric)

# Individual: :MPURecencyInterpretation (:MPURecencyInterpretation)

ClassAssertion(:RecencyInterpretation :MPURecencyInterpretation)
ObjectPropertyAssertion(:inputHasUnit :MPURecencyInterpretation <https://raw.githubusercontent.com/HajoRijgersberg/OM/master/om-2.0.rdf#OWLNamedIndividualImpl_2a3a2318_04b5_4baf_a108_c2d767ba8e7e>)
DataPropertyAssertion(:isCriticalIf :MPURecencyInterpretation "<apply><geq/><ci>output</ci><cn>365</cn></apply>"^^<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral>)
DataPropertyAssertion(:isGoodIf :MPURecencyInterpretation "<apply><leq/><ci>output</ci><cn>180</cn></apply>"^^<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral>)
DataPropertyAssertion(:isSufficientIf :MPURecencyInterpretation "<apply><lt/><cn>180</cn><cn>output</cn><cn>365</cn></apply>"^^<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral>)

# Individual: :MPURecencyMetric (:MPURecencyMetric)

ClassAssertion(:RecencyMetric :MPURecencyMetric)
ObjectPropertyAssertion(:hasInterpretation :MPURecencyMetric :MPURecencyInterpretation)
ObjectPropertyAssertion(:inputAccessibleFrom :MPURecencyMetric :MPUCalibrationDataSource)
ObjectPropertyAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> :MPURecencyMetric :MPURecencyObject)

# Individual: :MPURecencyObject (:MPURecencyObject)

ClassAssertion(<https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E1908> :MPURecencyObject)
DataPropertyAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasMathMLexpression> :MPURecencyObject "<apply><eq/><ci>output</ci><apply><minus/><apply>current-date</apply><ci>input</ci></apply></apply>"^^<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral>)

# Individual: :MPUUncertaintyInterpretation (:MPUUncertaintyInterpretation)

ClassAssertion(:MeasurementUncertaintyInterpretation :MPUUncertaintyInterpretation)
ObjectPropertyAssertion(:inputHasUnit :MPUUncertaintyInterpretation <https://raw.githubusercontent.com/HajoRijgersberg/OM/master/om-2.0.rdf#radianPerSecond-Time>)
DataPropertyAssertion(:isCriticalIf :MPUUncertaintyInterpretation "<apply><geq/><ci>output</ci><cn>0.5</cn></apply>"^^<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral>)
DataPropertyAssertion(:isGoodIf :MPUUncertaintyInterpretation "<apply><leq/><ci>output</ci><cn>0.01</cn></apply>"^^<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral>)
DataPropertyAssertion(:isSufficientIf :MPUUncertaintyInterpretation "<apply><lt/><cn>.01</cn><ci>output</ci><cn>.5</cn></apply>"^^<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral>)

# Individual: :MPUUncertaintyMetric (:MPUUncertaintyMetric)

ClassAssertion(:MeasurementUncertainty :MPUUncertaintyMetric)
ObjectPropertyAssertion(:hasInterpretation :MPUUncertaintyMetric :MPUUncertaintyInterpretation)
ObjectPropertyAssertion(:inputAccessibleFrom :MPUUncertaintyMetric :MPUCalibrationDataSource)
ObjectPropertyAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> :MPUUncertaintyMetric :MPUUncertaintyObject)

# Individual: :MPUUncertaintyObject (:MPUUncertaintyObject)

ClassAssertion(<https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E1908> :MPUUncertaintyObject)
DataPropertyAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasMathMLexpression> :MPUUncertaintyObject "<apply><eq/><ci>output</ci><ci>input</ci></apply>"^^<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral>)

# Individual: <http://www.w3.org/ns/ssn/> (<http://www.w3.org/ns/ssn/>)

ClassAssertion(<http://purl.org/vocommons/voaf#Vocabulary> <http://www.w3.org/ns/ssn/>)

# Individual: <http://www.w3.org/ns/ssn/systems/> (<http://www.w3.org/ns/ssn/systems/>)

ClassAssertion(<http://purl.org/vocommons/voaf#Vocabulary> <http://www.w3.org/ns/ssn/systems/>)

# Individual: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DenominatorArray> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DenominatorArray>)

AnnotationAssertion(om-2:hasUnit <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DenominatorArray> om-2:OWLNamedIndividualImpl_87ed9e1e_1e6b_492b_8c21_6f8cf0996e37)
ClassAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ArrayWithUncertainty> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DenominatorArray>)
ClassAssertion(ObjectMinCardinality(1 :hasInterpretation :QualityInterpretation) <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DenominatorArray>)
ObjectPropertyAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasUncertainty> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DenominatorArray> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DenominatorUncertainty>)
DataPropertyAssertion(om-2:hasNumericalValue <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DenominatorArray> "<vector><cn>1.00</cn><cn>355.71</cn>
<cn>71865.05</cn><cn>6361231.00</cn>
<cn>-2555989.83</cn><cn>102273.71</cn>
<cn>6653441.80</cn><cn>-3131762.12</cn></vector>"^^<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral>)

# Individual: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DenominatorUncertainty> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DenominatorUncertainty>)

ClassAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#EllipsoidalRegion> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DenominatorUncertainty>)
ClassAssertion(ObjectMinCardinality(1 :hasInterpretation :QualityInterpretation) <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DenominatorUncertainty>)
ObjectPropertyAssertion(om-2:hasValue <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DenominatorUncertainty> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covMatDenominator>)
ObjectPropertyAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCovarianceMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DenominatorUncertainty> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covMatDenominator>)

# Individual: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPU9250> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPU9250>)

ClassAssertion(sosa:Sensor <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPU9250>)
ClassAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#CalibratedSensor> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPU9250>)
ClassAssertion(ObjectAllValuesFrom(ObjectInverseOf(<http://www.w3.org/ns/ssn/hasSubSystem>) <http://www.w3.org/ns/ssn/System>) <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPU9250>)
ObjectPropertyAssertion(:hasIndicator <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPU9250> :MPUBatteryIndicator)
ObjectPropertyAssertion(:hasIndicator <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPU9250> :MPUCalibrationIndicator)
ObjectPropertyAssertion(sosa:isHostedBy <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPU9250> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#SmartupUnit>)
ObjectPropertyAssertion(sosa:observes <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPU9250> om-2:AngularVelocity)

# Individual: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUDenominatorPolynomial> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUDenominatorPolynomial>)

ClassAssertion(<https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E1995> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUDenominatorPolynomial>)
ClassAssertion(<https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E34> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUDenominatorPolynomial>)
ClassAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Polynomial> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUDenominatorPolynomial>)
ObjectPropertyAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCoefficients> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUDenominatorPolynomial> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#DenominatorArray>)

# Individual: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUNumeratorPolynomial> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUNumeratorPolynomial>)

ClassAssertion(<https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E1995> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUNumeratorPolynomial>)
ClassAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Polynomial> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUNumeratorPolynomial>)
ObjectPropertyAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCoefficients> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUNumeratorPolynomial> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NumeratorArray>)

# Individual: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPURationalFraction> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPURationalFraction>)

ClassAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#RationalFraction> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPURationalFraction>)
ObjectPropertyAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasDenominator> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPURationalFraction> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUDenominatorPolynomial>)
ObjectPropertyAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasNumerator> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPURationalFraction> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUNumeratorPolynomial>)

# Individual: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUcalibrationModel> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUcalibrationModel>)

ClassAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/scal.ttl#CalibrationModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUcalibrationModel>)
ClassAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#InfiniteImpulseResponseModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUcalibrationModel>)
ClassAssertion(ObjectMinCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject>) <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUcalibrationModel>)
ObjectPropertyAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#isExpressedBy> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUcalibrationModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPURationalFraction>)

# Individual: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUobservation> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUobservation>)

ClassAssertion(ObjectAllValuesFrom(sosa:hasFeatureOfInterest sosa:FeatureOfInterest) <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUobservation>)
ClassAssertion(ObjectAllValuesFrom(sosa:madeBySensor sosa:Sensor) <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUobservation>)
ClassAssertion(ObjectExactCardinality(1 sosa:observedProperty) <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUobservation>)
ObjectPropertyAssertion(sosa:hasResult <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUobservation> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUresult>)
ObjectPropertyAssertion(sosa:madeBySensor <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUobservation> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPU9250>)
DataPropertyAssertion(sosa:resultTime <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUobservation> "2021-02-16T13:00:00Z"^^xsd:dateTime)

# Individual: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUresult> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUresult>)

AnnotationAssertion(om-2:hasUnit <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUresult> om-2:radianPerSecond-Time)
ClassAssertion(sosa:OWLClassImpl_f8dae9b6_5094_43d9_a267_1f31d5992472 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUresult>)
ClassAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#MeasureWithUncertainty> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUresult>)
ObjectPropertyAssertion(sosa:isResultOf <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUresult> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUobservation>)
ObjectPropertyAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasUncertainty> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUresult> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUresultuncertainty>)
DataPropertyAssertion(om-2:hasNumericalValue <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUresult> "1.0"^^xsd:double)

# Individual: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUresultuncertainty> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUresultuncertainty>)

ClassAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#ExpandedUncertainty> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUresultuncertainty>)
DataPropertyAssertion(om-2:hasNumericalValue <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MPUresultuncertainty> "0.1"^^xsd:double)

# Individual: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NumeratorArray> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NumeratorArray>)

AnnotationAssertion(om-2:hasUnit <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NumeratorArray> om-2:OWLNamedIndividualImpl_87ed9e1e_1e6b_492b_8c21_6f8cf0996e37)
ClassAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#ArrayWithUncertainty> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NumeratorArray>)
ClassAssertion(ObjectAllValuesFrom(:hasInterpretation :MeasurementUncertaintyInterpretation) <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NumeratorArray>)
ObjectPropertyAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/dsi.ttl#hasUncertainty> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NumeratorArray> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NumeratorUncertainty>)
DataPropertyAssertion(om-2:hasNumericalValue <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NumeratorArray> "<vector><cn>0.04</cn><cn>33.76</cn>
<cn>-19885.32</cn><cn>6428406.45</cn>
<cn>-3393935.03</cn><cn>-153413.50</cn>
<cn>-6432435.78</cn><cn>3054910.80</cn></vector>"^^<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral>)

# Individual: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NumeratorUncertainty> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NumeratorUncertainty>)

ClassAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#EllipsoidalRegion> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NumeratorUncertainty>)
ObjectPropertyAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasCovarianceMatrix> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#NumeratorUncertainty> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covMatNumerator>)

# Individual: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#calibrationModel> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#calibrationModel>)

ClassAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#InfiniteImpulseResponseModel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#calibrationModel>)
ClassAssertion(ObjectExactCardinality(1 <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#hasBehavior> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#FrequencyBehavior>) <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#calibrationModel>)

# Individual: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covA> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covA>)

ClassAssertion(<https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E1706> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covA>)

# Individual: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covB> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covB>)

ClassAssertion(<https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E1706> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covB>)

# Individual: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covMatDenominator> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covMatDenominator>)

AnnotationAssertion(om-2:hasUnit <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covMatDenominator> om-2:OWLNamedIndividualImpl_87ed9e1e_1e6b_492b_8c21_6f8cf0996e37)
ClassAssertion(<https://raw.githubusercontent.com/CLLKazan/OntoMathPro/develop/OntoMathPro.omn#E1706> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covMatDenominator>)
ClassAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Array> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covMatDenominator>)
ClassAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathematicalObject> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covMatDenominator>)
ClassAssertion(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Parameter> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covMatDenominator>)
DataPropertyAssertion(om-2:hasNumericalValue <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covMatDenominator> "<matrix>
<matrixrow><cn>0.006</cn><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn>
<cn>0.0</cn><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn></matrixrow>
<matrixrow><cn>0.0</cn><cn>0.720</cn><cn>0.0</cn><cn>0.0</cn>
<cn>0.0</cn><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn></matrixrow>
<matrixrow><cn>0.0</cn><cn>0.0</cn><cn>126.719</cn><cn>0.0</cn>
<cn>0.0</cn><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn></matrixrow>
<matrixrow><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn><cn>667.265</cn>
<cn>0.0</cn><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn></matrixrow>
<matrixrow><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn>
<cn>10754.486</cn><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn></matrixrow>
<matrixrow><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn>
<cn>0.0</cn><cn>1047.130</cn><cn>0.0</cn><cn>0.0</cn></matrixrow>
<matrixrow><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn>
<cn>0.0</cn><cn>0.0</cn><cn>183.267</cn><cn>0.0</cn></matrixrow>
<matrixrow><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn>
<cn>0.0</cn><cn>0.0</cn><cn>0.0</cn><cn>61.542</cn></matrixrow>
</matrix>"^^<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral>)

# Individual: <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covMatNumerator> (<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covMatNumerator>)

AnnotationAssertion(om-2:hasUnit <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covMatNumerator> om-2:OWLNamedIndividualImpl_87ed9e1e_1e6b_492b_8c21_6f8cf0996e37)
ClassAssertion(ObjectMinCardinality(1 :hasInterpretation :QualityInterpretation) <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covMatNumerator>)
DataPropertyAssertion(om-2:hasNumericalValue <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#covMatNumerator> "<matrix>
<matrixrow><cn>0.003</cn><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn>
<cn>0.0</cn><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn></matrixrow>
<matrixrow><cn>0.0</cn><cn>0.441</cn><cn>0.0</cn><cn>0.0</cn>
<cn>0.0</cn><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn></matrixrow>
<matrixrow><cn>0.0</cn><cn>0.0</cn><cn>103.623</cn><cn>0.0</cn>
<cn>0.0</cn><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn></matrixrow>
<matrixrow><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn><cn>669.321</cn>
<cn>0.0</cn><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn></matrixrow>
<matrixrow><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn>
<cn>10696.986</cn><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn></matrixrow>
<matrixrow><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn>
<cn>0.0</cn><cn>1175.445</cn><cn>0.0</cn><cn>0.0</cn></matrixrow>
<matrixrow><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn>
<cn>0.0</cn><cn>0.0</cn><cn>166.493</cn><cn>0.0</cn></matrixrow>
<matrixrow><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn><cn>0.0</cn>
<cn>0.0</cn><cn>0.0</cn><cn>0.0</cn><cn>63.049</cn></matrixrow>
</matrix>"^^<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#MathMLLiteral>)


DisjointClasses(:AccuracyInterpretation :BatteryLevelInterpretation :ConsistencyInterpretation :MeasurementUncertaintyInterpretation :RecencyInterpretation :TimelinessInterpretation)
DisjointClasses(:AccuracyMetric :BatteryLevelMetric :CompletenessMetric :ConsistencyMetric :TimelinessMetric)
DisjointClasses(:CalibrationData :Completeness :Consistency :SamplingRate :Timeliness)
DisjointClasses(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#BandPass> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#BandStop> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#HighPass> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#LowPass>)
DisjointClasses(<https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Bessel> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Butterworth> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Chebyshev> <https://raw.githubusercontent.com/PTB-M4D/QoD/main/trans.ttl#Elliptic>)
ClassAssertion(foaf:Agent _:genid136)
ClassAssertion(foaf:Agent _:genid137)
ClassAssertion(foaf:Agent _:genid138)
ClassAssertion(foaf:Agent _:genid139)
ClassAssertion(foaf:Agent _:genid140)
ClassAssertion(foaf:Agent _:genid141)
ClassAssertion(foaf:Agent _:genid142)
ClassAssertion(foaf:Agent _:genid143)
ClassAssertion(foaf:Agent _:genid144)
ClassAssertion(foaf:Agent _:genid145)
SubObjectPropertyOf(ObjectPropertyChain(sosa:madeByActuator <http://www.w3.org/ns/ssn/implements>) sosa:usedProcedure)
SubObjectPropertyOf(ObjectPropertyChain(sosa:madeBySampler <http://www.w3.org/ns/ssn/implements>) sosa:usedProcedure)
SubObjectPropertyOf(ObjectPropertyChain(sosa:madeBySensor <http://www.w3.org/ns/ssn/implements>) sosa:usedProcedure)
SubObjectPropertyOf(ObjectPropertyChain(<http://www.w3.org/ns/ssn/inDeployment> <http://www.w3.org/ns/ssn/deployedSystem>) sosa:hosts)
AnnotationAssertion(foaf:name _:genid136 "W3C/OGC Spatial Data on the Web Working Group"@en)
AnnotationAssertion(foaf:name _:genid137 "W3C/OGC Spatial Data on the Web Working Group"@en)
AnnotationAssertion(foaf:name _:genid138 "W3C/OGC Spatial Data on the Web Working Group"@en)
AnnotationAssertion(foaf:name _:genid139 "W3C/OGC Spatial Data on the Web Working Group"@en)
AnnotationAssertion(foaf:name _:genid140 "W3C/OGC Spatial Data on the Web Working Group"@en)
AnnotationAssertion(foaf:name _:genid141 "W3C/OGC Spatial Data on the Web Working Group"@en)
AnnotationAssertion(foaf:name _:genid142 "W3C/OGC Spatial Data on the Web Working Group"@en)
AnnotationAssertion(foaf:name _:genid143 "W3C/OGC Spatial Data on the Web Working Group"@en)
AnnotationAssertion(foaf:name _:genid144 "W3C/OGC Spatial Data on the Web Working Group"@en)
AnnotationAssertion(foaf:name _:genid145 "W3C/OGC Spatial Data on the Web Working Group"@en)
AnnotationAssertion(owl:qualifiedCardinality _:genid146 "1"^^xsd:nonNegativeInteger)
)